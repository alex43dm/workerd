# Makefile.in generated by automake 1.13.4 from Makefile.am.
# Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/workerd
pkgincludedir = $(includedir)/workerd
pkglibdir = $(libdir)/workerd
pkglibexecdir = $(libexecdir)/workerd
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
bin_PROGRAMS = workerd$(EXEEXT)
#bin_PROGRAMS = workerdDummy$(EXEEXT)
subdir = .
DIST_COMMON = INSTALL NEWS README AUTHORS ChangeLog \
	$(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(top_srcdir)/configure $(am__configure_deps) \
	$(srcdir)/config.h.in depcomp $(dist_doc_DATA) COPYING compile \
	config.guess config.sub install-sh missing ltmain.sh
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/boost.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(docdir)" \
	"$(DESTDIR)$(sysconfdir)"
PROGRAMS = $(bin_PROGRAMS)
am__workerd_SOURCES_DIST = src/base64.cpp src/Core.cpp \
	src/GeoRerions.cpp src/HistoryManagerShortTerm.cpp src/Log.cpp \
	src/RedisClient.cpp src/BaseCore.cpp src/DataBase.cpp \
	src/HistoryManager.cpp src/Informer.cpp src/main.cpp \
	src/Server.cpp src/Campaign.cpp src/DB.cpp \
	src/HistoryManagerLongTerm.cpp src/Offer.cpp \
	src/sphinxRequests.cpp src/CgiService.cpp src/EBranch.cpp \
	src/HistoryManagerOffer.cpp src/json.cpp src/ParamParse.cpp \
	src/UrlParser.cpp src/Config.cpp src/KompexSQLiteDatabase.cpp \
	src/Params.cpp src/XXXSearcher.cpp src/Cookie.cpp \
	src/GeoIPTools.cpp src/HistoryManagerRetargeting.cpp \
	src/KompexSQLiteStatement.cpp src/ParentDB.cpp
am_workerd_OBJECTS = workerd-base64.$(OBJEXT) \
	workerd-Core.$(OBJEXT) \
	workerd-GeoRerions.$(OBJEXT) \
	workerd-HistoryManagerShortTerm.$(OBJEXT) \
	workerd-Log.$(OBJEXT) \
	workerd-RedisClient.$(OBJEXT) \
	workerd-BaseCore.$(OBJEXT) \
	workerd-DataBase.$(OBJEXT) \
	workerd-HistoryManager.$(OBJEXT) \
	workerd-Informer.$(OBJEXT) workerd-main.$(OBJEXT) \
	workerd-Server.$(OBJEXT) \
	workerd-Campaign.$(OBJEXT) workerd-DB.$(OBJEXT) \
	workerd-HistoryManagerLongTerm.$(OBJEXT) \
	workerd-Offer.$(OBJEXT) \
	workerd-sphinxRequests.$(OBJEXT) \
	workerd-CgiService.$(OBJEXT) \
	workerd-EBranch.$(OBJEXT) \
	workerd-HistoryManagerOffer.$(OBJEXT) \
	workerd-json.$(OBJEXT) \
	workerd-ParamParse.$(OBJEXT) \
	workerd-UrlParser.$(OBJEXT) \
	workerd-Config.$(OBJEXT) \
	workerd-KompexSQLiteDatabase.$(OBJEXT) \
	workerd-Params.$(OBJEXT) \
	workerd-XXXSearcher.$(OBJEXT) \
	workerd-Cookie.$(OBJEXT) \
	workerd-GeoIPTools.$(OBJEXT) \
	workerd-HistoryManagerRetargeting.$(OBJEXT) \
	workerd-KompexSQLiteStatement.$(OBJEXT) \
	workerd-ParentDB.$(OBJEXT)
workerd_OBJECTS = $(am_workerd_OBJECTS)
am__DEPENDENCIES_1 =
workerd_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	libs/libredis/lib/libredis.a
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
am__workerdDummy_SOURCES_DIST = src/base64.cpp src/Core.cpp \
	src/GeoRerions.cpp src/Log.cpp src/BaseCore.cpp \
	src/DataBase.cpp src/Informer.cpp src/main.cpp src/Server.cpp \
	src/Campaign.cpp src/DB.cpp src/Offer.cpp src/CgiService.cpp \
	src/EBranch.cpp src/json.cpp src/ParamParse.cpp \
	src/UrlParser.cpp src/Config.cpp src/KompexSQLiteDatabase.cpp \
	src/Params.cpp src/Cookie.cpp src/GeoIPTools.cpp \
	src/KompexSQLiteStatement.cpp src/ParentDB.cpp
#am_workerdDummy_OBJECTS = workerdDummy-base64.$(OBJEXT) \
#	workerdDummy-Core.$(OBJEXT) \
#	workerdDummy-GeoRerions.$(OBJEXT) \
#	workerdDummy-Log.$(OBJEXT) \
#	workerdDummy-BaseCore.$(OBJEXT) \
#	workerdDummy-DataBase.$(OBJEXT) \
#	workerdDummy-Informer.$(OBJEXT) \
#	workerdDummy-main.$(OBJEXT) \
#	workerdDummy-Server.$(OBJEXT) \
#	workerdDummy-Campaign.$(OBJEXT) \
#	workerdDummy-DB.$(OBJEXT) \
#	workerdDummy-Offer.$(OBJEXT) \
#	workerdDummy-CgiService.$(OBJEXT) \
#	workerdDummy-EBranch.$(OBJEXT) \
#	workerdDummy-json.$(OBJEXT) \
#	workerdDummy-ParamParse.$(OBJEXT) \
#	workerdDummy-UrlParser.$(OBJEXT) \
#	workerdDummy-Config.$(OBJEXT) \
#	workerdDummy-KompexSQLiteDatabase.$(OBJEXT) \
#	workerdDummy-Params.$(OBJEXT) \
#	workerdDummy-Cookie.$(OBJEXT) \
#	workerdDummy-GeoIPTools.$(OBJEXT) \
#	workerdDummy-KompexSQLiteStatement.$(OBJEXT) \
#	workerdDummy-ParentDB.$(OBJEXT)
workerdDummy_OBJECTS = $(am_workerdDummy_OBJECTS)
#workerdDummy_DEPENDENCIES = $(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(workerd_SOURCES) $(workerdDummy_SOURCES)
DIST_SOURCES = $(am__workerd_SOURCES_DIST) \
	$(am__workerdDummy_SOURCES_DIST)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
DATA = $(dist_doc_DATA) $(sysconf_DATA)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	cscope distdir dist dist-all distcheck
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) \
	$(LISP)config.h.in
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
CSCOPE = cscope
DIST_SUBDIRS = libs/libredis
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  if test -d "$(distdir)"; then \
    find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
      && rm -rf "$(distdir)" \
      || { sleep 5 && rm -rf "$(distdir)"; }; \
  else :; fi
am__post_remove_distdir = $(am__remove_distdir)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
DIST_TARGETS = dist-gzip
distuninstallcheck_listfiles = find . -type f -print
am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
  | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
distcleancheck_listfiles = find . -type f -print
ACLOCAL = ${SHELL} /home/alex/Projects/worker/missing aclocal-1.13
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = ar
AUTOCONF = ${SHELL} /home/alex/Projects/worker/missing autoconf
AUTOHEADER = ${SHELL} /home/alex/Projects/worker/missing autoheader
AUTOMAKE = ${SHELL} /home/alex/Projects/worker/missing automake-1.13
AWK = gawk
BOOST_CPPFLAGS =  -pthread
BOOST_DATE_TIME_LDFLAGS = -L/usr/local/lib -Wl,-R,/usr/local/lib
BOOST_DATE_TIME_LDPATH = /usr/local/lib
BOOST_DATE_TIME_LIBS = -lboost_date_time-mt
BOOST_FILESYSTEM_LDFLAGS = -L/usr/local/lib -Wl,-R,/usr/local/lib
BOOST_FILESYSTEM_LDPATH = /usr/local/lib
BOOST_FILESYSTEM_LIBS = -lboost_filesystem-mt
BOOST_LDPATH = /usr/local/lib
BOOST_REGEX_LDFLAGS = -L/usr/local/lib -Wl,-R,/usr/local/lib
BOOST_REGEX_LDPATH = /usr/local/lib
BOOST_REGEX_LIBS = -lboost_regex-mt
BOOST_ROOT = 
BOOST_SYSTEM_LDFLAGS = -L/usr/local/lib -Wl,-R,/usr/local/lib
BOOST_SYSTEM_LDPATH = /usr/local/lib
BOOST_SYSTEM_LIBS = -lboost_system-mt
BOOST_THREAD_LDFLAGS = -L/usr/local/lib -Wl,-R,/usr/local/lib
BOOST_THREAD_LDPATH = /usr/local/lib
BOOST_THREAD_LIBS = -lboost_thread-mt -lboost_system-mt -pthread
BOOST_THREAD_WIN32_LDFLAGS = 
BOOST_THREAD_WIN32_LDPATH = 
BOOST_THREAD_WIN32_LIBS = 
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = -W -Wall
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DISTCHECK_CONFIGURE_FLAGS =  '--with-boost='
DLLTOOL = false
DOLLAR_SIGN = $
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/x86_64-pc-linux-gnu/bin/ld -m elf_x86_64
LDFLAGS =  -lmongoclient -lboost_system
LIBOBJS = 
LIBS = -lrabbitmq -ltinyxml -lGeoIP -lsqlite3 -lfcgi -licudata -licui18n -licuuc -lmongoclient -lamqpcpp -lsphinxclient 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/alex/Projects/worker/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = workerd
PACKAGE_BUGREPORT = wvdial@gmail.com
PACKAGE_NAME = workerd
PACKAGE_STRING = workerd 0.1
PACKAGE_TARNAME = workerd
PACKAGE_URL = 
PACKAGE_VERSION = 0.1
PATH_SEPARATOR = :
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 0.1
abs_builddir = /home/alex/Projects/worker
abs_srcdir = /home/alex/Projects/worker
abs_top_builddir = /home/alex/Projects/worker
abs_top_srcdir = /home/alex/Projects/worker
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/alex/Projects/worker/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = 
top_builddir = .
top_srcdir = .
ACLOCAL_AMFLAGS = -I m4
debian_BUILD = $(PACKAGE)-$(VERSION)
AM_CFLAGS = -Ofast
#AM_CFLAGS = -g -DDEBUG -Wall
AM_CXXFLAGS = -Ofast
#AM_CXXFLAGS = -g -DDEBUG -Wall
#workerdDummy_SOURCES = src/base64.cpp src/Core.cpp src/GeoRerions.cpp src/Log.cpp src/BaseCore.cpp src/DataBase.cpp src/Informer.cpp src/main.cpp src/Server.cpp src/Campaign.cpp src/DB.cpp src/Offer.cpp src/CgiService.cpp src/EBranch.cpp src/json.cpp src/ParamParse.cpp src/UrlParser.cpp src/Config.cpp src/KompexSQLiteDatabase.cpp src/Params.cpp src/Cookie.cpp src/GeoIPTools.cpp src/KompexSQLiteStatement.cpp src/ParentDB.cpp
#workerdDummy_CPPFLAGS = -std=c++11 -Iinclude
#workerdDummy_LDADD = \
#	$(BOOST_DATE_TIME_LIBS) \
#	$(BOOST_FILESYSTEM_LIBS) \
#	$(BOOST_THREAD_LIBS) \
#	$(BOOST_SYSTEM_LIBS) \
#	$(BOOST_REGEX_LIBS)

workerd_SOURCES = src/base64.cpp src/Core.cpp src/GeoRerions.cpp src/HistoryManagerShortTerm.cpp src/Log.cpp src/RedisClient.cpp src/BaseCore.cpp src/DataBase.cpp src/HistoryManager.cpp src/Informer.cpp src/main.cpp src/Server.cpp src/Campaign.cpp src/DB.cpp src/HistoryManagerLongTerm.cpp src/Offer.cpp src/sphinxRequests.cpp src/CgiService.cpp src/EBranch.cpp src/HistoryManagerOffer.cpp src/json.cpp src/ParamParse.cpp src/UrlParser.cpp src/Config.cpp src/KompexSQLiteDatabase.cpp src/Params.cpp src/XXXSearcher.cpp src/Cookie.cpp src/GeoIPTools.cpp src/HistoryManagerRetargeting.cpp src/KompexSQLiteStatement.cpp src/ParentDB.cpp
workerd_CPPFLAGS = -std=c++11 -Iinclude -Ilibs/libredis
workerd_LDADD = \
	$(BOOST_DATE_TIME_LIBS) \
	$(BOOST_FILESYSTEM_LIBS) \
	$(BOOST_THREAD_LIBS) \
	$(BOOST_SYSTEM_LIBS) \
	$(BOOST_REGEX_LIBS) \
	libs/libredis/lib/libredis.a

SUBDIRS = libs/libredis
dist_doc_DATA = README
sysconf_DATA = \
db_dump/requests/02.sql \
db_dump/requests/01.sql \
db_dump/requests/05.sql \
db_dump/requests/04.sql \
db_dump/requests/03.sql \
db_dump/UA_RU \
db_dump/tables/11_GeoCountries.sql \
db_dump/tables/00_Campaign.sql \
db_dump/tables/17_Retargeting.sql \
db_dump/tables/12_GeoRerions.sql \
db_dump/tables/20_GeoLiteCity.sql \
db_dump/tables/06_Accounts.sql \
db_dump/tables/02_Offer.sql \
db_dump/tables/07_Campaign2Accounts.sql \
db_dump/tables/15_CampaignNow.sql \
db_dump/tables/16_Informer.sql \
db_dump/tables/18_Informer2OfferRating.sql \
db_dump/tables/10_CronCampaign.sql \
db_dump/tables/05_Campaign2Informer.sql \
db_dump/tables/14_regionTargeting.sql \
db_dump/tables/08_Domains.sql \
db_dump/tables/19_Campaign2Categories.sql \
db_dump/tables/04_Categories2Domain.sql \
db_dump/tables/13_geoTargeting.sql \
db_dump/tables/03_Categories.sql \
db_dump/tables/09_Campaign2Domains.sql \
db_dump/tables/04_Categories2Informer.sql \
db_dump/view/00_Campaign2GeoRerions.sql \
db_dump/view/03_Campaign2Acnts.sql \
db_dump/view/02_Campaign2Doms.sql \
db_dump/view/04_Campaign2Infs.sql \
db_dump/post/01.sql \
db_dump/schema/CampaignNow.sql \
template/swfobject.js \
template/banner.html \
template/error.html \
template/teaser.html

install_f = \
echo "install to $1"; \
$(MKDIR_P) $(1)/etc/worker/template; \
$(MKDIR_P) $(1)/etc/worker/db_dump; \
$(MKDIR_P) $(1)/etc/worker/db_dump/schema; \
$(MKDIR_P) $(1)/etc/worker/db_dump/post; \
$(MKDIR_P) $(1)/etc/worker/db_dump/view; \
$(MKDIR_P) $(1)/etc/worker/db_dump/tables; \
$(MKDIR_P) $(1)/etc/worker/db_dump/requests; \
$(MKDIR_P) $(1)/etc/init.d; \
$(MKDIR_P) $(1)/usr/bin; \
$(SED) 's/\/home\/alex\/Projects\/worker/\/$(1)\/etc\/worker/' < ./config.xml > $(1)/etc/worker/config.xml; \
$(INSTALL) $(bin_PROGRAMS) $(1)/usr/bin; \
$(INSTALL) install/workerd $(1)/etc/init.d; \
@list='$(sysconf_DATA)'; \
for p in $$list; do \
$(INSTALL_DATA) $$p "$(1)/etc/worker/$$p" || exit $$?; \
done

all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
am--refresh: Makefile
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --gnu'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --gnu \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

config.h: stamp-h1
	@if test ! -f $@; then rm -f stamp-h1; else :; fi
	@if test ! -f $@; then $(MAKE) $(AM_MAKEFLAGS) stamp-h1; else :; fi

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config.h
$(srcdir)/config.h.in:  $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

workerd$(EXEEXT): $(workerd_OBJECTS) $(workerd_DEPENDENCIES) $(EXTRA_workerd_DEPENDENCIES) 
	@rm -f workerd$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(workerd_OBJECTS) $(workerd_LDADD) $(LIBS)

workerdDummy$(EXEEXT): $(workerdDummy_OBJECTS) $(workerdDummy_DEPENDENCIES) $(EXTRA_workerdDummy_DEPENDENCIES) 
	@rm -f workerdDummy$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(workerdDummy_OBJECTS) $(workerdDummy_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/workerd-BaseCore.Po
include ./$(DEPDIR)/workerd-Campaign.Po
include ./$(DEPDIR)/workerd-CgiService.Po
include ./$(DEPDIR)/workerd-Config.Po
include ./$(DEPDIR)/workerd-Cookie.Po
include ./$(DEPDIR)/workerd-Core.Po
include ./$(DEPDIR)/workerd-DB.Po
include ./$(DEPDIR)/workerd-DataBase.Po
include ./$(DEPDIR)/workerd-EBranch.Po
include ./$(DEPDIR)/workerd-GeoIPTools.Po
include ./$(DEPDIR)/workerd-GeoRerions.Po
include ./$(DEPDIR)/workerd-HistoryManager.Po
include ./$(DEPDIR)/workerd-HistoryManagerLongTerm.Po
include ./$(DEPDIR)/workerd-HistoryManagerOffer.Po
include ./$(DEPDIR)/workerd-HistoryManagerRetargeting.Po
include ./$(DEPDIR)/workerd-HistoryManagerShortTerm.Po
include ./$(DEPDIR)/workerd-Informer.Po
include ./$(DEPDIR)/workerd-KompexSQLiteDatabase.Po
include ./$(DEPDIR)/workerd-KompexSQLiteStatement.Po
include ./$(DEPDIR)/workerd-Log.Po
include ./$(DEPDIR)/workerd-Offer.Po
include ./$(DEPDIR)/workerd-ParamParse.Po
include ./$(DEPDIR)/workerd-Params.Po
include ./$(DEPDIR)/workerd-ParentDB.Po
include ./$(DEPDIR)/workerd-RedisClient.Po
include ./$(DEPDIR)/workerd-Server.Po
include ./$(DEPDIR)/workerd-UrlParser.Po
include ./$(DEPDIR)/workerd-XXXSearcher.Po
include ./$(DEPDIR)/workerd-base64.Po
include ./$(DEPDIR)/workerd-json.Po
include ./$(DEPDIR)/workerd-main.Po
include ./$(DEPDIR)/workerd-sphinxRequests.Po
include ./$(DEPDIR)/workerdDummy-BaseCore.Po
include ./$(DEPDIR)/workerdDummy-Campaign.Po
include ./$(DEPDIR)/workerdDummy-CgiService.Po
include ./$(DEPDIR)/workerdDummy-Config.Po
include ./$(DEPDIR)/workerdDummy-Cookie.Po
include ./$(DEPDIR)/workerdDummy-Core.Po
include ./$(DEPDIR)/workerdDummy-DB.Po
include ./$(DEPDIR)/workerdDummy-DataBase.Po
include ./$(DEPDIR)/workerdDummy-EBranch.Po
include ./$(DEPDIR)/workerdDummy-GeoIPTools.Po
include ./$(DEPDIR)/workerdDummy-GeoRerions.Po
include ./$(DEPDIR)/workerdDummy-Informer.Po
include ./$(DEPDIR)/workerdDummy-KompexSQLiteDatabase.Po
include ./$(DEPDIR)/workerdDummy-KompexSQLiteStatement.Po
include ./$(DEPDIR)/workerdDummy-Log.Po
include ./$(DEPDIR)/workerdDummy-Offer.Po
include ./$(DEPDIR)/workerdDummy-ParamParse.Po
include ./$(DEPDIR)/workerdDummy-Params.Po
include ./$(DEPDIR)/workerdDummy-ParentDB.Po
include ./$(DEPDIR)/workerdDummy-Server.Po
include ./$(DEPDIR)/workerdDummy-UrlParser.Po
include ./$(DEPDIR)/workerdDummy-base64.Po
include ./$(DEPDIR)/workerdDummy-json.Po
include ./$(DEPDIR)/workerdDummy-main.Po

.cpp.o:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

workerd-base64.o: src/base64.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerd-base64.o -MD -MP -MF $(DEPDIR)/workerd-base64.Tpo -c -o workerd-base64.o `test -f 'src/base64.cpp' || echo '$(srcdir)/'`src/base64.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerd-base64.Tpo $(DEPDIR)/workerd-base64.Po
#	$(AM_V_CXX)source='src/base64.cpp' object='workerd-base64.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerd-base64.o `test -f 'src/base64.cpp' || echo '$(srcdir)/'`src/base64.cpp

workerd-base64.obj: src/base64.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerd-base64.obj -MD -MP -MF $(DEPDIR)/workerd-base64.Tpo -c -o workerd-base64.obj `if test -f 'src/base64.cpp'; then $(CYGPATH_W) 'src/base64.cpp'; else $(CYGPATH_W) '$(srcdir)/src/base64.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerd-base64.Tpo $(DEPDIR)/workerd-base64.Po
#	$(AM_V_CXX)source='src/base64.cpp' object='workerd-base64.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerd-base64.obj `if test -f 'src/base64.cpp'; then $(CYGPATH_W) 'src/base64.cpp'; else $(CYGPATH_W) '$(srcdir)/src/base64.cpp'; fi`

workerd-Core.o: src/Core.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerd-Core.o -MD -MP -MF $(DEPDIR)/workerd-Core.Tpo -c -o workerd-Core.o `test -f 'src/Core.cpp' || echo '$(srcdir)/'`src/Core.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerd-Core.Tpo $(DEPDIR)/workerd-Core.Po
#	$(AM_V_CXX)source='src/Core.cpp' object='workerd-Core.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerd-Core.o `test -f 'src/Core.cpp' || echo '$(srcdir)/'`src/Core.cpp

workerd-Core.obj: src/Core.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerd-Core.obj -MD -MP -MF $(DEPDIR)/workerd-Core.Tpo -c -o workerd-Core.obj `if test -f 'src/Core.cpp'; then $(CYGPATH_W) 'src/Core.cpp'; else $(CYGPATH_W) '$(srcdir)/src/Core.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerd-Core.Tpo $(DEPDIR)/workerd-Core.Po
#	$(AM_V_CXX)source='src/Core.cpp' object='workerd-Core.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerd-Core.obj `if test -f 'src/Core.cpp'; then $(CYGPATH_W) 'src/Core.cpp'; else $(CYGPATH_W) '$(srcdir)/src/Core.cpp'; fi`

workerd-GeoRerions.o: src/GeoRerions.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerd-GeoRerions.o -MD -MP -MF $(DEPDIR)/workerd-GeoRerions.Tpo -c -o workerd-GeoRerions.o `test -f 'src/GeoRerions.cpp' || echo '$(srcdir)/'`src/GeoRerions.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerd-GeoRerions.Tpo $(DEPDIR)/workerd-GeoRerions.Po
#	$(AM_V_CXX)source='src/GeoRerions.cpp' object='workerd-GeoRerions.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerd-GeoRerions.o `test -f 'src/GeoRerions.cpp' || echo '$(srcdir)/'`src/GeoRerions.cpp

workerd-GeoRerions.obj: src/GeoRerions.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerd-GeoRerions.obj -MD -MP -MF $(DEPDIR)/workerd-GeoRerions.Tpo -c -o workerd-GeoRerions.obj `if test -f 'src/GeoRerions.cpp'; then $(CYGPATH_W) 'src/GeoRerions.cpp'; else $(CYGPATH_W) '$(srcdir)/src/GeoRerions.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerd-GeoRerions.Tpo $(DEPDIR)/workerd-GeoRerions.Po
#	$(AM_V_CXX)source='src/GeoRerions.cpp' object='workerd-GeoRerions.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerd-GeoRerions.obj `if test -f 'src/GeoRerions.cpp'; then $(CYGPATH_W) 'src/GeoRerions.cpp'; else $(CYGPATH_W) '$(srcdir)/src/GeoRerions.cpp'; fi`

workerd-HistoryManagerShortTerm.o: src/HistoryManagerShortTerm.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerd-HistoryManagerShortTerm.o -MD -MP -MF $(DEPDIR)/workerd-HistoryManagerShortTerm.Tpo -c -o workerd-HistoryManagerShortTerm.o `test -f 'src/HistoryManagerShortTerm.cpp' || echo '$(srcdir)/'`src/HistoryManagerShortTerm.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerd-HistoryManagerShortTerm.Tpo $(DEPDIR)/workerd-HistoryManagerShortTerm.Po
#	$(AM_V_CXX)source='src/HistoryManagerShortTerm.cpp' object='workerd-HistoryManagerShortTerm.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerd-HistoryManagerShortTerm.o `test -f 'src/HistoryManagerShortTerm.cpp' || echo '$(srcdir)/'`src/HistoryManagerShortTerm.cpp

workerd-HistoryManagerShortTerm.obj: src/HistoryManagerShortTerm.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerd-HistoryManagerShortTerm.obj -MD -MP -MF $(DEPDIR)/workerd-HistoryManagerShortTerm.Tpo -c -o workerd-HistoryManagerShortTerm.obj `if test -f 'src/HistoryManagerShortTerm.cpp'; then $(CYGPATH_W) 'src/HistoryManagerShortTerm.cpp'; else $(CYGPATH_W) '$(srcdir)/src/HistoryManagerShortTerm.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerd-HistoryManagerShortTerm.Tpo $(DEPDIR)/workerd-HistoryManagerShortTerm.Po
#	$(AM_V_CXX)source='src/HistoryManagerShortTerm.cpp' object='workerd-HistoryManagerShortTerm.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerd-HistoryManagerShortTerm.obj `if test -f 'src/HistoryManagerShortTerm.cpp'; then $(CYGPATH_W) 'src/HistoryManagerShortTerm.cpp'; else $(CYGPATH_W) '$(srcdir)/src/HistoryManagerShortTerm.cpp'; fi`

workerd-Log.o: src/Log.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerd-Log.o -MD -MP -MF $(DEPDIR)/workerd-Log.Tpo -c -o workerd-Log.o `test -f 'src/Log.cpp' || echo '$(srcdir)/'`src/Log.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerd-Log.Tpo $(DEPDIR)/workerd-Log.Po
#	$(AM_V_CXX)source='src/Log.cpp' object='workerd-Log.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerd-Log.o `test -f 'src/Log.cpp' || echo '$(srcdir)/'`src/Log.cpp

workerd-Log.obj: src/Log.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerd-Log.obj -MD -MP -MF $(DEPDIR)/workerd-Log.Tpo -c -o workerd-Log.obj `if test -f 'src/Log.cpp'; then $(CYGPATH_W) 'src/Log.cpp'; else $(CYGPATH_W) '$(srcdir)/src/Log.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerd-Log.Tpo $(DEPDIR)/workerd-Log.Po
#	$(AM_V_CXX)source='src/Log.cpp' object='workerd-Log.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerd-Log.obj `if test -f 'src/Log.cpp'; then $(CYGPATH_W) 'src/Log.cpp'; else $(CYGPATH_W) '$(srcdir)/src/Log.cpp'; fi`

workerd-RedisClient.o: src/RedisClient.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerd-RedisClient.o -MD -MP -MF $(DEPDIR)/workerd-RedisClient.Tpo -c -o workerd-RedisClient.o `test -f 'src/RedisClient.cpp' || echo '$(srcdir)/'`src/RedisClient.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerd-RedisClient.Tpo $(DEPDIR)/workerd-RedisClient.Po
#	$(AM_V_CXX)source='src/RedisClient.cpp' object='workerd-RedisClient.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerd-RedisClient.o `test -f 'src/RedisClient.cpp' || echo '$(srcdir)/'`src/RedisClient.cpp

workerd-RedisClient.obj: src/RedisClient.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerd-RedisClient.obj -MD -MP -MF $(DEPDIR)/workerd-RedisClient.Tpo -c -o workerd-RedisClient.obj `if test -f 'src/RedisClient.cpp'; then $(CYGPATH_W) 'src/RedisClient.cpp'; else $(CYGPATH_W) '$(srcdir)/src/RedisClient.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerd-RedisClient.Tpo $(DEPDIR)/workerd-RedisClient.Po
#	$(AM_V_CXX)source='src/RedisClient.cpp' object='workerd-RedisClient.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerd-RedisClient.obj `if test -f 'src/RedisClient.cpp'; then $(CYGPATH_W) 'src/RedisClient.cpp'; else $(CYGPATH_W) '$(srcdir)/src/RedisClient.cpp'; fi`

workerd-BaseCore.o: src/BaseCore.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerd-BaseCore.o -MD -MP -MF $(DEPDIR)/workerd-BaseCore.Tpo -c -o workerd-BaseCore.o `test -f 'src/BaseCore.cpp' || echo '$(srcdir)/'`src/BaseCore.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerd-BaseCore.Tpo $(DEPDIR)/workerd-BaseCore.Po
#	$(AM_V_CXX)source='src/BaseCore.cpp' object='workerd-BaseCore.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerd-BaseCore.o `test -f 'src/BaseCore.cpp' || echo '$(srcdir)/'`src/BaseCore.cpp

workerd-BaseCore.obj: src/BaseCore.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerd-BaseCore.obj -MD -MP -MF $(DEPDIR)/workerd-BaseCore.Tpo -c -o workerd-BaseCore.obj `if test -f 'src/BaseCore.cpp'; then $(CYGPATH_W) 'src/BaseCore.cpp'; else $(CYGPATH_W) '$(srcdir)/src/BaseCore.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerd-BaseCore.Tpo $(DEPDIR)/workerd-BaseCore.Po
#	$(AM_V_CXX)source='src/BaseCore.cpp' object='workerd-BaseCore.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerd-BaseCore.obj `if test -f 'src/BaseCore.cpp'; then $(CYGPATH_W) 'src/BaseCore.cpp'; else $(CYGPATH_W) '$(srcdir)/src/BaseCore.cpp'; fi`

workerd-DataBase.o: src/DataBase.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerd-DataBase.o -MD -MP -MF $(DEPDIR)/workerd-DataBase.Tpo -c -o workerd-DataBase.o `test -f 'src/DataBase.cpp' || echo '$(srcdir)/'`src/DataBase.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerd-DataBase.Tpo $(DEPDIR)/workerd-DataBase.Po
#	$(AM_V_CXX)source='src/DataBase.cpp' object='workerd-DataBase.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerd-DataBase.o `test -f 'src/DataBase.cpp' || echo '$(srcdir)/'`src/DataBase.cpp

workerd-DataBase.obj: src/DataBase.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerd-DataBase.obj -MD -MP -MF $(DEPDIR)/workerd-DataBase.Tpo -c -o workerd-DataBase.obj `if test -f 'src/DataBase.cpp'; then $(CYGPATH_W) 'src/DataBase.cpp'; else $(CYGPATH_W) '$(srcdir)/src/DataBase.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerd-DataBase.Tpo $(DEPDIR)/workerd-DataBase.Po
#	$(AM_V_CXX)source='src/DataBase.cpp' object='workerd-DataBase.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerd-DataBase.obj `if test -f 'src/DataBase.cpp'; then $(CYGPATH_W) 'src/DataBase.cpp'; else $(CYGPATH_W) '$(srcdir)/src/DataBase.cpp'; fi`

workerd-HistoryManager.o: src/HistoryManager.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerd-HistoryManager.o -MD -MP -MF $(DEPDIR)/workerd-HistoryManager.Tpo -c -o workerd-HistoryManager.o `test -f 'src/HistoryManager.cpp' || echo '$(srcdir)/'`src/HistoryManager.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerd-HistoryManager.Tpo $(DEPDIR)/workerd-HistoryManager.Po
#	$(AM_V_CXX)source='src/HistoryManager.cpp' object='workerd-HistoryManager.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerd-HistoryManager.o `test -f 'src/HistoryManager.cpp' || echo '$(srcdir)/'`src/HistoryManager.cpp

workerd-HistoryManager.obj: src/HistoryManager.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerd-HistoryManager.obj -MD -MP -MF $(DEPDIR)/workerd-HistoryManager.Tpo -c -o workerd-HistoryManager.obj `if test -f 'src/HistoryManager.cpp'; then $(CYGPATH_W) 'src/HistoryManager.cpp'; else $(CYGPATH_W) '$(srcdir)/src/HistoryManager.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerd-HistoryManager.Tpo $(DEPDIR)/workerd-HistoryManager.Po
#	$(AM_V_CXX)source='src/HistoryManager.cpp' object='workerd-HistoryManager.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerd-HistoryManager.obj `if test -f 'src/HistoryManager.cpp'; then $(CYGPATH_W) 'src/HistoryManager.cpp'; else $(CYGPATH_W) '$(srcdir)/src/HistoryManager.cpp'; fi`

workerd-Informer.o: src/Informer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerd-Informer.o -MD -MP -MF $(DEPDIR)/workerd-Informer.Tpo -c -o workerd-Informer.o `test -f 'src/Informer.cpp' || echo '$(srcdir)/'`src/Informer.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerd-Informer.Tpo $(DEPDIR)/workerd-Informer.Po
#	$(AM_V_CXX)source='src/Informer.cpp' object='workerd-Informer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerd-Informer.o `test -f 'src/Informer.cpp' || echo '$(srcdir)/'`src/Informer.cpp

workerd-Informer.obj: src/Informer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerd-Informer.obj -MD -MP -MF $(DEPDIR)/workerd-Informer.Tpo -c -o workerd-Informer.obj `if test -f 'src/Informer.cpp'; then $(CYGPATH_W) 'src/Informer.cpp'; else $(CYGPATH_W) '$(srcdir)/src/Informer.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerd-Informer.Tpo $(DEPDIR)/workerd-Informer.Po
#	$(AM_V_CXX)source='src/Informer.cpp' object='workerd-Informer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerd-Informer.obj `if test -f 'src/Informer.cpp'; then $(CYGPATH_W) 'src/Informer.cpp'; else $(CYGPATH_W) '$(srcdir)/src/Informer.cpp'; fi`

workerd-main.o: src/main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerd-main.o -MD -MP -MF $(DEPDIR)/workerd-main.Tpo -c -o workerd-main.o `test -f 'src/main.cpp' || echo '$(srcdir)/'`src/main.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerd-main.Tpo $(DEPDIR)/workerd-main.Po
#	$(AM_V_CXX)source='src/main.cpp' object='workerd-main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerd-main.o `test -f 'src/main.cpp' || echo '$(srcdir)/'`src/main.cpp

workerd-main.obj: src/main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerd-main.obj -MD -MP -MF $(DEPDIR)/workerd-main.Tpo -c -o workerd-main.obj `if test -f 'src/main.cpp'; then $(CYGPATH_W) 'src/main.cpp'; else $(CYGPATH_W) '$(srcdir)/src/main.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerd-main.Tpo $(DEPDIR)/workerd-main.Po
#	$(AM_V_CXX)source='src/main.cpp' object='workerd-main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerd-main.obj `if test -f 'src/main.cpp'; then $(CYGPATH_W) 'src/main.cpp'; else $(CYGPATH_W) '$(srcdir)/src/main.cpp'; fi`

workerd-Server.o: src/Server.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerd-Server.o -MD -MP -MF $(DEPDIR)/workerd-Server.Tpo -c -o workerd-Server.o `test -f 'src/Server.cpp' || echo '$(srcdir)/'`src/Server.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerd-Server.Tpo $(DEPDIR)/workerd-Server.Po
#	$(AM_V_CXX)source='src/Server.cpp' object='workerd-Server.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerd-Server.o `test -f 'src/Server.cpp' || echo '$(srcdir)/'`src/Server.cpp

workerd-Server.obj: src/Server.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerd-Server.obj -MD -MP -MF $(DEPDIR)/workerd-Server.Tpo -c -o workerd-Server.obj `if test -f 'src/Server.cpp'; then $(CYGPATH_W) 'src/Server.cpp'; else $(CYGPATH_W) '$(srcdir)/src/Server.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerd-Server.Tpo $(DEPDIR)/workerd-Server.Po
#	$(AM_V_CXX)source='src/Server.cpp' object='workerd-Server.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerd-Server.obj `if test -f 'src/Server.cpp'; then $(CYGPATH_W) 'src/Server.cpp'; else $(CYGPATH_W) '$(srcdir)/src/Server.cpp'; fi`

workerd-Campaign.o: src/Campaign.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerd-Campaign.o -MD -MP -MF $(DEPDIR)/workerd-Campaign.Tpo -c -o workerd-Campaign.o `test -f 'src/Campaign.cpp' || echo '$(srcdir)/'`src/Campaign.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerd-Campaign.Tpo $(DEPDIR)/workerd-Campaign.Po
#	$(AM_V_CXX)source='src/Campaign.cpp' object='workerd-Campaign.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerd-Campaign.o `test -f 'src/Campaign.cpp' || echo '$(srcdir)/'`src/Campaign.cpp

workerd-Campaign.obj: src/Campaign.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerd-Campaign.obj -MD -MP -MF $(DEPDIR)/workerd-Campaign.Tpo -c -o workerd-Campaign.obj `if test -f 'src/Campaign.cpp'; then $(CYGPATH_W) 'src/Campaign.cpp'; else $(CYGPATH_W) '$(srcdir)/src/Campaign.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerd-Campaign.Tpo $(DEPDIR)/workerd-Campaign.Po
#	$(AM_V_CXX)source='src/Campaign.cpp' object='workerd-Campaign.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerd-Campaign.obj `if test -f 'src/Campaign.cpp'; then $(CYGPATH_W) 'src/Campaign.cpp'; else $(CYGPATH_W) '$(srcdir)/src/Campaign.cpp'; fi`

workerd-DB.o: src/DB.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerd-DB.o -MD -MP -MF $(DEPDIR)/workerd-DB.Tpo -c -o workerd-DB.o `test -f 'src/DB.cpp' || echo '$(srcdir)/'`src/DB.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerd-DB.Tpo $(DEPDIR)/workerd-DB.Po
#	$(AM_V_CXX)source='src/DB.cpp' object='workerd-DB.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerd-DB.o `test -f 'src/DB.cpp' || echo '$(srcdir)/'`src/DB.cpp

workerd-DB.obj: src/DB.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerd-DB.obj -MD -MP -MF $(DEPDIR)/workerd-DB.Tpo -c -o workerd-DB.obj `if test -f 'src/DB.cpp'; then $(CYGPATH_W) 'src/DB.cpp'; else $(CYGPATH_W) '$(srcdir)/src/DB.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerd-DB.Tpo $(DEPDIR)/workerd-DB.Po
#	$(AM_V_CXX)source='src/DB.cpp' object='workerd-DB.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerd-DB.obj `if test -f 'src/DB.cpp'; then $(CYGPATH_W) 'src/DB.cpp'; else $(CYGPATH_W) '$(srcdir)/src/DB.cpp'; fi`

workerd-HistoryManagerLongTerm.o: src/HistoryManagerLongTerm.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerd-HistoryManagerLongTerm.o -MD -MP -MF $(DEPDIR)/workerd-HistoryManagerLongTerm.Tpo -c -o workerd-HistoryManagerLongTerm.o `test -f 'src/HistoryManagerLongTerm.cpp' || echo '$(srcdir)/'`src/HistoryManagerLongTerm.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerd-HistoryManagerLongTerm.Tpo $(DEPDIR)/workerd-HistoryManagerLongTerm.Po
#	$(AM_V_CXX)source='src/HistoryManagerLongTerm.cpp' object='workerd-HistoryManagerLongTerm.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerd-HistoryManagerLongTerm.o `test -f 'src/HistoryManagerLongTerm.cpp' || echo '$(srcdir)/'`src/HistoryManagerLongTerm.cpp

workerd-HistoryManagerLongTerm.obj: src/HistoryManagerLongTerm.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerd-HistoryManagerLongTerm.obj -MD -MP -MF $(DEPDIR)/workerd-HistoryManagerLongTerm.Tpo -c -o workerd-HistoryManagerLongTerm.obj `if test -f 'src/HistoryManagerLongTerm.cpp'; then $(CYGPATH_W) 'src/HistoryManagerLongTerm.cpp'; else $(CYGPATH_W) '$(srcdir)/src/HistoryManagerLongTerm.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerd-HistoryManagerLongTerm.Tpo $(DEPDIR)/workerd-HistoryManagerLongTerm.Po
#	$(AM_V_CXX)source='src/HistoryManagerLongTerm.cpp' object='workerd-HistoryManagerLongTerm.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerd-HistoryManagerLongTerm.obj `if test -f 'src/HistoryManagerLongTerm.cpp'; then $(CYGPATH_W) 'src/HistoryManagerLongTerm.cpp'; else $(CYGPATH_W) '$(srcdir)/src/HistoryManagerLongTerm.cpp'; fi`

workerd-Offer.o: src/Offer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerd-Offer.o -MD -MP -MF $(DEPDIR)/workerd-Offer.Tpo -c -o workerd-Offer.o `test -f 'src/Offer.cpp' || echo '$(srcdir)/'`src/Offer.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerd-Offer.Tpo $(DEPDIR)/workerd-Offer.Po
#	$(AM_V_CXX)source='src/Offer.cpp' object='workerd-Offer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerd-Offer.o `test -f 'src/Offer.cpp' || echo '$(srcdir)/'`src/Offer.cpp

workerd-Offer.obj: src/Offer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerd-Offer.obj -MD -MP -MF $(DEPDIR)/workerd-Offer.Tpo -c -o workerd-Offer.obj `if test -f 'src/Offer.cpp'; then $(CYGPATH_W) 'src/Offer.cpp'; else $(CYGPATH_W) '$(srcdir)/src/Offer.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerd-Offer.Tpo $(DEPDIR)/workerd-Offer.Po
#	$(AM_V_CXX)source='src/Offer.cpp' object='workerd-Offer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerd-Offer.obj `if test -f 'src/Offer.cpp'; then $(CYGPATH_W) 'src/Offer.cpp'; else $(CYGPATH_W) '$(srcdir)/src/Offer.cpp'; fi`

workerd-sphinxRequests.o: src/sphinxRequests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerd-sphinxRequests.o -MD -MP -MF $(DEPDIR)/workerd-sphinxRequests.Tpo -c -o workerd-sphinxRequests.o `test -f 'src/sphinxRequests.cpp' || echo '$(srcdir)/'`src/sphinxRequests.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerd-sphinxRequests.Tpo $(DEPDIR)/workerd-sphinxRequests.Po
#	$(AM_V_CXX)source='src/sphinxRequests.cpp' object='workerd-sphinxRequests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerd-sphinxRequests.o `test -f 'src/sphinxRequests.cpp' || echo '$(srcdir)/'`src/sphinxRequests.cpp

workerd-sphinxRequests.obj: src/sphinxRequests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerd-sphinxRequests.obj -MD -MP -MF $(DEPDIR)/workerd-sphinxRequests.Tpo -c -o workerd-sphinxRequests.obj `if test -f 'src/sphinxRequests.cpp'; then $(CYGPATH_W) 'src/sphinxRequests.cpp'; else $(CYGPATH_W) '$(srcdir)/src/sphinxRequests.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerd-sphinxRequests.Tpo $(DEPDIR)/workerd-sphinxRequests.Po
#	$(AM_V_CXX)source='src/sphinxRequests.cpp' object='workerd-sphinxRequests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerd-sphinxRequests.obj `if test -f 'src/sphinxRequests.cpp'; then $(CYGPATH_W) 'src/sphinxRequests.cpp'; else $(CYGPATH_W) '$(srcdir)/src/sphinxRequests.cpp'; fi`

workerd-CgiService.o: src/CgiService.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerd-CgiService.o -MD -MP -MF $(DEPDIR)/workerd-CgiService.Tpo -c -o workerd-CgiService.o `test -f 'src/CgiService.cpp' || echo '$(srcdir)/'`src/CgiService.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerd-CgiService.Tpo $(DEPDIR)/workerd-CgiService.Po
#	$(AM_V_CXX)source='src/CgiService.cpp' object='workerd-CgiService.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerd-CgiService.o `test -f 'src/CgiService.cpp' || echo '$(srcdir)/'`src/CgiService.cpp

workerd-CgiService.obj: src/CgiService.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerd-CgiService.obj -MD -MP -MF $(DEPDIR)/workerd-CgiService.Tpo -c -o workerd-CgiService.obj `if test -f 'src/CgiService.cpp'; then $(CYGPATH_W) 'src/CgiService.cpp'; else $(CYGPATH_W) '$(srcdir)/src/CgiService.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerd-CgiService.Tpo $(DEPDIR)/workerd-CgiService.Po
#	$(AM_V_CXX)source='src/CgiService.cpp' object='workerd-CgiService.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerd-CgiService.obj `if test -f 'src/CgiService.cpp'; then $(CYGPATH_W) 'src/CgiService.cpp'; else $(CYGPATH_W) '$(srcdir)/src/CgiService.cpp'; fi`

workerd-EBranch.o: src/EBranch.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerd-EBranch.o -MD -MP -MF $(DEPDIR)/workerd-EBranch.Tpo -c -o workerd-EBranch.o `test -f 'src/EBranch.cpp' || echo '$(srcdir)/'`src/EBranch.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerd-EBranch.Tpo $(DEPDIR)/workerd-EBranch.Po
#	$(AM_V_CXX)source='src/EBranch.cpp' object='workerd-EBranch.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerd-EBranch.o `test -f 'src/EBranch.cpp' || echo '$(srcdir)/'`src/EBranch.cpp

workerd-EBranch.obj: src/EBranch.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerd-EBranch.obj -MD -MP -MF $(DEPDIR)/workerd-EBranch.Tpo -c -o workerd-EBranch.obj `if test -f 'src/EBranch.cpp'; then $(CYGPATH_W) 'src/EBranch.cpp'; else $(CYGPATH_W) '$(srcdir)/src/EBranch.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerd-EBranch.Tpo $(DEPDIR)/workerd-EBranch.Po
#	$(AM_V_CXX)source='src/EBranch.cpp' object='workerd-EBranch.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerd-EBranch.obj `if test -f 'src/EBranch.cpp'; then $(CYGPATH_W) 'src/EBranch.cpp'; else $(CYGPATH_W) '$(srcdir)/src/EBranch.cpp'; fi`

workerd-HistoryManagerOffer.o: src/HistoryManagerOffer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerd-HistoryManagerOffer.o -MD -MP -MF $(DEPDIR)/workerd-HistoryManagerOffer.Tpo -c -o workerd-HistoryManagerOffer.o `test -f 'src/HistoryManagerOffer.cpp' || echo '$(srcdir)/'`src/HistoryManagerOffer.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerd-HistoryManagerOffer.Tpo $(DEPDIR)/workerd-HistoryManagerOffer.Po
#	$(AM_V_CXX)source='src/HistoryManagerOffer.cpp' object='workerd-HistoryManagerOffer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerd-HistoryManagerOffer.o `test -f 'src/HistoryManagerOffer.cpp' || echo '$(srcdir)/'`src/HistoryManagerOffer.cpp

workerd-HistoryManagerOffer.obj: src/HistoryManagerOffer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerd-HistoryManagerOffer.obj -MD -MP -MF $(DEPDIR)/workerd-HistoryManagerOffer.Tpo -c -o workerd-HistoryManagerOffer.obj `if test -f 'src/HistoryManagerOffer.cpp'; then $(CYGPATH_W) 'src/HistoryManagerOffer.cpp'; else $(CYGPATH_W) '$(srcdir)/src/HistoryManagerOffer.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerd-HistoryManagerOffer.Tpo $(DEPDIR)/workerd-HistoryManagerOffer.Po
#	$(AM_V_CXX)source='src/HistoryManagerOffer.cpp' object='workerd-HistoryManagerOffer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerd-HistoryManagerOffer.obj `if test -f 'src/HistoryManagerOffer.cpp'; then $(CYGPATH_W) 'src/HistoryManagerOffer.cpp'; else $(CYGPATH_W) '$(srcdir)/src/HistoryManagerOffer.cpp'; fi`

workerd-json.o: src/json.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerd-json.o -MD -MP -MF $(DEPDIR)/workerd-json.Tpo -c -o workerd-json.o `test -f 'src/json.cpp' || echo '$(srcdir)/'`src/json.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerd-json.Tpo $(DEPDIR)/workerd-json.Po
#	$(AM_V_CXX)source='src/json.cpp' object='workerd-json.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerd-json.o `test -f 'src/json.cpp' || echo '$(srcdir)/'`src/json.cpp

workerd-json.obj: src/json.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerd-json.obj -MD -MP -MF $(DEPDIR)/workerd-json.Tpo -c -o workerd-json.obj `if test -f 'src/json.cpp'; then $(CYGPATH_W) 'src/json.cpp'; else $(CYGPATH_W) '$(srcdir)/src/json.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerd-json.Tpo $(DEPDIR)/workerd-json.Po
#	$(AM_V_CXX)source='src/json.cpp' object='workerd-json.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerd-json.obj `if test -f 'src/json.cpp'; then $(CYGPATH_W) 'src/json.cpp'; else $(CYGPATH_W) '$(srcdir)/src/json.cpp'; fi`

workerd-ParamParse.o: src/ParamParse.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerd-ParamParse.o -MD -MP -MF $(DEPDIR)/workerd-ParamParse.Tpo -c -o workerd-ParamParse.o `test -f 'src/ParamParse.cpp' || echo '$(srcdir)/'`src/ParamParse.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerd-ParamParse.Tpo $(DEPDIR)/workerd-ParamParse.Po
#	$(AM_V_CXX)source='src/ParamParse.cpp' object='workerd-ParamParse.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerd-ParamParse.o `test -f 'src/ParamParse.cpp' || echo '$(srcdir)/'`src/ParamParse.cpp

workerd-ParamParse.obj: src/ParamParse.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerd-ParamParse.obj -MD -MP -MF $(DEPDIR)/workerd-ParamParse.Tpo -c -o workerd-ParamParse.obj `if test -f 'src/ParamParse.cpp'; then $(CYGPATH_W) 'src/ParamParse.cpp'; else $(CYGPATH_W) '$(srcdir)/src/ParamParse.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerd-ParamParse.Tpo $(DEPDIR)/workerd-ParamParse.Po
#	$(AM_V_CXX)source='src/ParamParse.cpp' object='workerd-ParamParse.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerd-ParamParse.obj `if test -f 'src/ParamParse.cpp'; then $(CYGPATH_W) 'src/ParamParse.cpp'; else $(CYGPATH_W) '$(srcdir)/src/ParamParse.cpp'; fi`

workerd-UrlParser.o: src/UrlParser.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerd-UrlParser.o -MD -MP -MF $(DEPDIR)/workerd-UrlParser.Tpo -c -o workerd-UrlParser.o `test -f 'src/UrlParser.cpp' || echo '$(srcdir)/'`src/UrlParser.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerd-UrlParser.Tpo $(DEPDIR)/workerd-UrlParser.Po
#	$(AM_V_CXX)source='src/UrlParser.cpp' object='workerd-UrlParser.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerd-UrlParser.o `test -f 'src/UrlParser.cpp' || echo '$(srcdir)/'`src/UrlParser.cpp

workerd-UrlParser.obj: src/UrlParser.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerd-UrlParser.obj -MD -MP -MF $(DEPDIR)/workerd-UrlParser.Tpo -c -o workerd-UrlParser.obj `if test -f 'src/UrlParser.cpp'; then $(CYGPATH_W) 'src/UrlParser.cpp'; else $(CYGPATH_W) '$(srcdir)/src/UrlParser.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerd-UrlParser.Tpo $(DEPDIR)/workerd-UrlParser.Po
#	$(AM_V_CXX)source='src/UrlParser.cpp' object='workerd-UrlParser.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerd-UrlParser.obj `if test -f 'src/UrlParser.cpp'; then $(CYGPATH_W) 'src/UrlParser.cpp'; else $(CYGPATH_W) '$(srcdir)/src/UrlParser.cpp'; fi`

workerd-Config.o: src/Config.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerd-Config.o -MD -MP -MF $(DEPDIR)/workerd-Config.Tpo -c -o workerd-Config.o `test -f 'src/Config.cpp' || echo '$(srcdir)/'`src/Config.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerd-Config.Tpo $(DEPDIR)/workerd-Config.Po
#	$(AM_V_CXX)source='src/Config.cpp' object='workerd-Config.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerd-Config.o `test -f 'src/Config.cpp' || echo '$(srcdir)/'`src/Config.cpp

workerd-Config.obj: src/Config.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerd-Config.obj -MD -MP -MF $(DEPDIR)/workerd-Config.Tpo -c -o workerd-Config.obj `if test -f 'src/Config.cpp'; then $(CYGPATH_W) 'src/Config.cpp'; else $(CYGPATH_W) '$(srcdir)/src/Config.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerd-Config.Tpo $(DEPDIR)/workerd-Config.Po
#	$(AM_V_CXX)source='src/Config.cpp' object='workerd-Config.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerd-Config.obj `if test -f 'src/Config.cpp'; then $(CYGPATH_W) 'src/Config.cpp'; else $(CYGPATH_W) '$(srcdir)/src/Config.cpp'; fi`

workerd-KompexSQLiteDatabase.o: src/KompexSQLiteDatabase.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerd-KompexSQLiteDatabase.o -MD -MP -MF $(DEPDIR)/workerd-KompexSQLiteDatabase.Tpo -c -o workerd-KompexSQLiteDatabase.o `test -f 'src/KompexSQLiteDatabase.cpp' || echo '$(srcdir)/'`src/KompexSQLiteDatabase.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerd-KompexSQLiteDatabase.Tpo $(DEPDIR)/workerd-KompexSQLiteDatabase.Po
#	$(AM_V_CXX)source='src/KompexSQLiteDatabase.cpp' object='workerd-KompexSQLiteDatabase.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerd-KompexSQLiteDatabase.o `test -f 'src/KompexSQLiteDatabase.cpp' || echo '$(srcdir)/'`src/KompexSQLiteDatabase.cpp

workerd-KompexSQLiteDatabase.obj: src/KompexSQLiteDatabase.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerd-KompexSQLiteDatabase.obj -MD -MP -MF $(DEPDIR)/workerd-KompexSQLiteDatabase.Tpo -c -o workerd-KompexSQLiteDatabase.obj `if test -f 'src/KompexSQLiteDatabase.cpp'; then $(CYGPATH_W) 'src/KompexSQLiteDatabase.cpp'; else $(CYGPATH_W) '$(srcdir)/src/KompexSQLiteDatabase.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerd-KompexSQLiteDatabase.Tpo $(DEPDIR)/workerd-KompexSQLiteDatabase.Po
#	$(AM_V_CXX)source='src/KompexSQLiteDatabase.cpp' object='workerd-KompexSQLiteDatabase.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerd-KompexSQLiteDatabase.obj `if test -f 'src/KompexSQLiteDatabase.cpp'; then $(CYGPATH_W) 'src/KompexSQLiteDatabase.cpp'; else $(CYGPATH_W) '$(srcdir)/src/KompexSQLiteDatabase.cpp'; fi`

workerd-Params.o: src/Params.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerd-Params.o -MD -MP -MF $(DEPDIR)/workerd-Params.Tpo -c -o workerd-Params.o `test -f 'src/Params.cpp' || echo '$(srcdir)/'`src/Params.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerd-Params.Tpo $(DEPDIR)/workerd-Params.Po
#	$(AM_V_CXX)source='src/Params.cpp' object='workerd-Params.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerd-Params.o `test -f 'src/Params.cpp' || echo '$(srcdir)/'`src/Params.cpp

workerd-Params.obj: src/Params.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerd-Params.obj -MD -MP -MF $(DEPDIR)/workerd-Params.Tpo -c -o workerd-Params.obj `if test -f 'src/Params.cpp'; then $(CYGPATH_W) 'src/Params.cpp'; else $(CYGPATH_W) '$(srcdir)/src/Params.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerd-Params.Tpo $(DEPDIR)/workerd-Params.Po
#	$(AM_V_CXX)source='src/Params.cpp' object='workerd-Params.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerd-Params.obj `if test -f 'src/Params.cpp'; then $(CYGPATH_W) 'src/Params.cpp'; else $(CYGPATH_W) '$(srcdir)/src/Params.cpp'; fi`

workerd-XXXSearcher.o: src/XXXSearcher.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerd-XXXSearcher.o -MD -MP -MF $(DEPDIR)/workerd-XXXSearcher.Tpo -c -o workerd-XXXSearcher.o `test -f 'src/XXXSearcher.cpp' || echo '$(srcdir)/'`src/XXXSearcher.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerd-XXXSearcher.Tpo $(DEPDIR)/workerd-XXXSearcher.Po
#	$(AM_V_CXX)source='src/XXXSearcher.cpp' object='workerd-XXXSearcher.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerd-XXXSearcher.o `test -f 'src/XXXSearcher.cpp' || echo '$(srcdir)/'`src/XXXSearcher.cpp

workerd-XXXSearcher.obj: src/XXXSearcher.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerd-XXXSearcher.obj -MD -MP -MF $(DEPDIR)/workerd-XXXSearcher.Tpo -c -o workerd-XXXSearcher.obj `if test -f 'src/XXXSearcher.cpp'; then $(CYGPATH_W) 'src/XXXSearcher.cpp'; else $(CYGPATH_W) '$(srcdir)/src/XXXSearcher.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerd-XXXSearcher.Tpo $(DEPDIR)/workerd-XXXSearcher.Po
#	$(AM_V_CXX)source='src/XXXSearcher.cpp' object='workerd-XXXSearcher.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerd-XXXSearcher.obj `if test -f 'src/XXXSearcher.cpp'; then $(CYGPATH_W) 'src/XXXSearcher.cpp'; else $(CYGPATH_W) '$(srcdir)/src/XXXSearcher.cpp'; fi`

workerd-Cookie.o: src/Cookie.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerd-Cookie.o -MD -MP -MF $(DEPDIR)/workerd-Cookie.Tpo -c -o workerd-Cookie.o `test -f 'src/Cookie.cpp' || echo '$(srcdir)/'`src/Cookie.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerd-Cookie.Tpo $(DEPDIR)/workerd-Cookie.Po
#	$(AM_V_CXX)source='src/Cookie.cpp' object='workerd-Cookie.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerd-Cookie.o `test -f 'src/Cookie.cpp' || echo '$(srcdir)/'`src/Cookie.cpp

workerd-Cookie.obj: src/Cookie.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerd-Cookie.obj -MD -MP -MF $(DEPDIR)/workerd-Cookie.Tpo -c -o workerd-Cookie.obj `if test -f 'src/Cookie.cpp'; then $(CYGPATH_W) 'src/Cookie.cpp'; else $(CYGPATH_W) '$(srcdir)/src/Cookie.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerd-Cookie.Tpo $(DEPDIR)/workerd-Cookie.Po
#	$(AM_V_CXX)source='src/Cookie.cpp' object='workerd-Cookie.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerd-Cookie.obj `if test -f 'src/Cookie.cpp'; then $(CYGPATH_W) 'src/Cookie.cpp'; else $(CYGPATH_W) '$(srcdir)/src/Cookie.cpp'; fi`

workerd-GeoIPTools.o: src/GeoIPTools.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerd-GeoIPTools.o -MD -MP -MF $(DEPDIR)/workerd-GeoIPTools.Tpo -c -o workerd-GeoIPTools.o `test -f 'src/GeoIPTools.cpp' || echo '$(srcdir)/'`src/GeoIPTools.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerd-GeoIPTools.Tpo $(DEPDIR)/workerd-GeoIPTools.Po
#	$(AM_V_CXX)source='src/GeoIPTools.cpp' object='workerd-GeoIPTools.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerd-GeoIPTools.o `test -f 'src/GeoIPTools.cpp' || echo '$(srcdir)/'`src/GeoIPTools.cpp

workerd-GeoIPTools.obj: src/GeoIPTools.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerd-GeoIPTools.obj -MD -MP -MF $(DEPDIR)/workerd-GeoIPTools.Tpo -c -o workerd-GeoIPTools.obj `if test -f 'src/GeoIPTools.cpp'; then $(CYGPATH_W) 'src/GeoIPTools.cpp'; else $(CYGPATH_W) '$(srcdir)/src/GeoIPTools.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerd-GeoIPTools.Tpo $(DEPDIR)/workerd-GeoIPTools.Po
#	$(AM_V_CXX)source='src/GeoIPTools.cpp' object='workerd-GeoIPTools.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerd-GeoIPTools.obj `if test -f 'src/GeoIPTools.cpp'; then $(CYGPATH_W) 'src/GeoIPTools.cpp'; else $(CYGPATH_W) '$(srcdir)/src/GeoIPTools.cpp'; fi`

workerd-HistoryManagerRetargeting.o: src/HistoryManagerRetargeting.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerd-HistoryManagerRetargeting.o -MD -MP -MF $(DEPDIR)/workerd-HistoryManagerRetargeting.Tpo -c -o workerd-HistoryManagerRetargeting.o `test -f 'src/HistoryManagerRetargeting.cpp' || echo '$(srcdir)/'`src/HistoryManagerRetargeting.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerd-HistoryManagerRetargeting.Tpo $(DEPDIR)/workerd-HistoryManagerRetargeting.Po
#	$(AM_V_CXX)source='src/HistoryManagerRetargeting.cpp' object='workerd-HistoryManagerRetargeting.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerd-HistoryManagerRetargeting.o `test -f 'src/HistoryManagerRetargeting.cpp' || echo '$(srcdir)/'`src/HistoryManagerRetargeting.cpp

workerd-HistoryManagerRetargeting.obj: src/HistoryManagerRetargeting.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerd-HistoryManagerRetargeting.obj -MD -MP -MF $(DEPDIR)/workerd-HistoryManagerRetargeting.Tpo -c -o workerd-HistoryManagerRetargeting.obj `if test -f 'src/HistoryManagerRetargeting.cpp'; then $(CYGPATH_W) 'src/HistoryManagerRetargeting.cpp'; else $(CYGPATH_W) '$(srcdir)/src/HistoryManagerRetargeting.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerd-HistoryManagerRetargeting.Tpo $(DEPDIR)/workerd-HistoryManagerRetargeting.Po
#	$(AM_V_CXX)source='src/HistoryManagerRetargeting.cpp' object='workerd-HistoryManagerRetargeting.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerd-HistoryManagerRetargeting.obj `if test -f 'src/HistoryManagerRetargeting.cpp'; then $(CYGPATH_W) 'src/HistoryManagerRetargeting.cpp'; else $(CYGPATH_W) '$(srcdir)/src/HistoryManagerRetargeting.cpp'; fi`

workerd-KompexSQLiteStatement.o: src/KompexSQLiteStatement.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerd-KompexSQLiteStatement.o -MD -MP -MF $(DEPDIR)/workerd-KompexSQLiteStatement.Tpo -c -o workerd-KompexSQLiteStatement.o `test -f 'src/KompexSQLiteStatement.cpp' || echo '$(srcdir)/'`src/KompexSQLiteStatement.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerd-KompexSQLiteStatement.Tpo $(DEPDIR)/workerd-KompexSQLiteStatement.Po
#	$(AM_V_CXX)source='src/KompexSQLiteStatement.cpp' object='workerd-KompexSQLiteStatement.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerd-KompexSQLiteStatement.o `test -f 'src/KompexSQLiteStatement.cpp' || echo '$(srcdir)/'`src/KompexSQLiteStatement.cpp

workerd-KompexSQLiteStatement.obj: src/KompexSQLiteStatement.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerd-KompexSQLiteStatement.obj -MD -MP -MF $(DEPDIR)/workerd-KompexSQLiteStatement.Tpo -c -o workerd-KompexSQLiteStatement.obj `if test -f 'src/KompexSQLiteStatement.cpp'; then $(CYGPATH_W) 'src/KompexSQLiteStatement.cpp'; else $(CYGPATH_W) '$(srcdir)/src/KompexSQLiteStatement.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerd-KompexSQLiteStatement.Tpo $(DEPDIR)/workerd-KompexSQLiteStatement.Po
#	$(AM_V_CXX)source='src/KompexSQLiteStatement.cpp' object='workerd-KompexSQLiteStatement.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerd-KompexSQLiteStatement.obj `if test -f 'src/KompexSQLiteStatement.cpp'; then $(CYGPATH_W) 'src/KompexSQLiteStatement.cpp'; else $(CYGPATH_W) '$(srcdir)/src/KompexSQLiteStatement.cpp'; fi`

workerd-ParentDB.o: src/ParentDB.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerd-ParentDB.o -MD -MP -MF $(DEPDIR)/workerd-ParentDB.Tpo -c -o workerd-ParentDB.o `test -f 'src/ParentDB.cpp' || echo '$(srcdir)/'`src/ParentDB.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerd-ParentDB.Tpo $(DEPDIR)/workerd-ParentDB.Po
#	$(AM_V_CXX)source='src/ParentDB.cpp' object='workerd-ParentDB.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerd-ParentDB.o `test -f 'src/ParentDB.cpp' || echo '$(srcdir)/'`src/ParentDB.cpp

workerd-ParentDB.obj: src/ParentDB.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerd-ParentDB.obj -MD -MP -MF $(DEPDIR)/workerd-ParentDB.Tpo -c -o workerd-ParentDB.obj `if test -f 'src/ParentDB.cpp'; then $(CYGPATH_W) 'src/ParentDB.cpp'; else $(CYGPATH_W) '$(srcdir)/src/ParentDB.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerd-ParentDB.Tpo $(DEPDIR)/workerd-ParentDB.Po
#	$(AM_V_CXX)source='src/ParentDB.cpp' object='workerd-ParentDB.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerd-ParentDB.obj `if test -f 'src/ParentDB.cpp'; then $(CYGPATH_W) 'src/ParentDB.cpp'; else $(CYGPATH_W) '$(srcdir)/src/ParentDB.cpp'; fi`

workerdDummy-base64.o: src/base64.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerdDummy-base64.o -MD -MP -MF $(DEPDIR)/workerdDummy-base64.Tpo -c -o workerdDummy-base64.o `test -f 'src/base64.cpp' || echo '$(srcdir)/'`src/base64.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerdDummy-base64.Tpo $(DEPDIR)/workerdDummy-base64.Po
#	$(AM_V_CXX)source='src/base64.cpp' object='workerdDummy-base64.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerdDummy-base64.o `test -f 'src/base64.cpp' || echo '$(srcdir)/'`src/base64.cpp

workerdDummy-base64.obj: src/base64.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerdDummy-base64.obj -MD -MP -MF $(DEPDIR)/workerdDummy-base64.Tpo -c -o workerdDummy-base64.obj `if test -f 'src/base64.cpp'; then $(CYGPATH_W) 'src/base64.cpp'; else $(CYGPATH_W) '$(srcdir)/src/base64.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerdDummy-base64.Tpo $(DEPDIR)/workerdDummy-base64.Po
#	$(AM_V_CXX)source='src/base64.cpp' object='workerdDummy-base64.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerdDummy-base64.obj `if test -f 'src/base64.cpp'; then $(CYGPATH_W) 'src/base64.cpp'; else $(CYGPATH_W) '$(srcdir)/src/base64.cpp'; fi`

workerdDummy-Core.o: src/Core.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerdDummy-Core.o -MD -MP -MF $(DEPDIR)/workerdDummy-Core.Tpo -c -o workerdDummy-Core.o `test -f 'src/Core.cpp' || echo '$(srcdir)/'`src/Core.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerdDummy-Core.Tpo $(DEPDIR)/workerdDummy-Core.Po
#	$(AM_V_CXX)source='src/Core.cpp' object='workerdDummy-Core.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerdDummy-Core.o `test -f 'src/Core.cpp' || echo '$(srcdir)/'`src/Core.cpp

workerdDummy-Core.obj: src/Core.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerdDummy-Core.obj -MD -MP -MF $(DEPDIR)/workerdDummy-Core.Tpo -c -o workerdDummy-Core.obj `if test -f 'src/Core.cpp'; then $(CYGPATH_W) 'src/Core.cpp'; else $(CYGPATH_W) '$(srcdir)/src/Core.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerdDummy-Core.Tpo $(DEPDIR)/workerdDummy-Core.Po
#	$(AM_V_CXX)source='src/Core.cpp' object='workerdDummy-Core.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerdDummy-Core.obj `if test -f 'src/Core.cpp'; then $(CYGPATH_W) 'src/Core.cpp'; else $(CYGPATH_W) '$(srcdir)/src/Core.cpp'; fi`

workerdDummy-GeoRerions.o: src/GeoRerions.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerdDummy-GeoRerions.o -MD -MP -MF $(DEPDIR)/workerdDummy-GeoRerions.Tpo -c -o workerdDummy-GeoRerions.o `test -f 'src/GeoRerions.cpp' || echo '$(srcdir)/'`src/GeoRerions.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerdDummy-GeoRerions.Tpo $(DEPDIR)/workerdDummy-GeoRerions.Po
#	$(AM_V_CXX)source='src/GeoRerions.cpp' object='workerdDummy-GeoRerions.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerdDummy-GeoRerions.o `test -f 'src/GeoRerions.cpp' || echo '$(srcdir)/'`src/GeoRerions.cpp

workerdDummy-GeoRerions.obj: src/GeoRerions.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerdDummy-GeoRerions.obj -MD -MP -MF $(DEPDIR)/workerdDummy-GeoRerions.Tpo -c -o workerdDummy-GeoRerions.obj `if test -f 'src/GeoRerions.cpp'; then $(CYGPATH_W) 'src/GeoRerions.cpp'; else $(CYGPATH_W) '$(srcdir)/src/GeoRerions.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerdDummy-GeoRerions.Tpo $(DEPDIR)/workerdDummy-GeoRerions.Po
#	$(AM_V_CXX)source='src/GeoRerions.cpp' object='workerdDummy-GeoRerions.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerdDummy-GeoRerions.obj `if test -f 'src/GeoRerions.cpp'; then $(CYGPATH_W) 'src/GeoRerions.cpp'; else $(CYGPATH_W) '$(srcdir)/src/GeoRerions.cpp'; fi`

workerdDummy-Log.o: src/Log.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerdDummy-Log.o -MD -MP -MF $(DEPDIR)/workerdDummy-Log.Tpo -c -o workerdDummy-Log.o `test -f 'src/Log.cpp' || echo '$(srcdir)/'`src/Log.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerdDummy-Log.Tpo $(DEPDIR)/workerdDummy-Log.Po
#	$(AM_V_CXX)source='src/Log.cpp' object='workerdDummy-Log.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerdDummy-Log.o `test -f 'src/Log.cpp' || echo '$(srcdir)/'`src/Log.cpp

workerdDummy-Log.obj: src/Log.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerdDummy-Log.obj -MD -MP -MF $(DEPDIR)/workerdDummy-Log.Tpo -c -o workerdDummy-Log.obj `if test -f 'src/Log.cpp'; then $(CYGPATH_W) 'src/Log.cpp'; else $(CYGPATH_W) '$(srcdir)/src/Log.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerdDummy-Log.Tpo $(DEPDIR)/workerdDummy-Log.Po
#	$(AM_V_CXX)source='src/Log.cpp' object='workerdDummy-Log.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerdDummy-Log.obj `if test -f 'src/Log.cpp'; then $(CYGPATH_W) 'src/Log.cpp'; else $(CYGPATH_W) '$(srcdir)/src/Log.cpp'; fi`

workerdDummy-BaseCore.o: src/BaseCore.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerdDummy-BaseCore.o -MD -MP -MF $(DEPDIR)/workerdDummy-BaseCore.Tpo -c -o workerdDummy-BaseCore.o `test -f 'src/BaseCore.cpp' || echo '$(srcdir)/'`src/BaseCore.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerdDummy-BaseCore.Tpo $(DEPDIR)/workerdDummy-BaseCore.Po
#	$(AM_V_CXX)source='src/BaseCore.cpp' object='workerdDummy-BaseCore.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerdDummy-BaseCore.o `test -f 'src/BaseCore.cpp' || echo '$(srcdir)/'`src/BaseCore.cpp

workerdDummy-BaseCore.obj: src/BaseCore.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerdDummy-BaseCore.obj -MD -MP -MF $(DEPDIR)/workerdDummy-BaseCore.Tpo -c -o workerdDummy-BaseCore.obj `if test -f 'src/BaseCore.cpp'; then $(CYGPATH_W) 'src/BaseCore.cpp'; else $(CYGPATH_W) '$(srcdir)/src/BaseCore.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerdDummy-BaseCore.Tpo $(DEPDIR)/workerdDummy-BaseCore.Po
#	$(AM_V_CXX)source='src/BaseCore.cpp' object='workerdDummy-BaseCore.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerdDummy-BaseCore.obj `if test -f 'src/BaseCore.cpp'; then $(CYGPATH_W) 'src/BaseCore.cpp'; else $(CYGPATH_W) '$(srcdir)/src/BaseCore.cpp'; fi`

workerdDummy-DataBase.o: src/DataBase.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerdDummy-DataBase.o -MD -MP -MF $(DEPDIR)/workerdDummy-DataBase.Tpo -c -o workerdDummy-DataBase.o `test -f 'src/DataBase.cpp' || echo '$(srcdir)/'`src/DataBase.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerdDummy-DataBase.Tpo $(DEPDIR)/workerdDummy-DataBase.Po
#	$(AM_V_CXX)source='src/DataBase.cpp' object='workerdDummy-DataBase.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerdDummy-DataBase.o `test -f 'src/DataBase.cpp' || echo '$(srcdir)/'`src/DataBase.cpp

workerdDummy-DataBase.obj: src/DataBase.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerdDummy-DataBase.obj -MD -MP -MF $(DEPDIR)/workerdDummy-DataBase.Tpo -c -o workerdDummy-DataBase.obj `if test -f 'src/DataBase.cpp'; then $(CYGPATH_W) 'src/DataBase.cpp'; else $(CYGPATH_W) '$(srcdir)/src/DataBase.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerdDummy-DataBase.Tpo $(DEPDIR)/workerdDummy-DataBase.Po
#	$(AM_V_CXX)source='src/DataBase.cpp' object='workerdDummy-DataBase.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerdDummy-DataBase.obj `if test -f 'src/DataBase.cpp'; then $(CYGPATH_W) 'src/DataBase.cpp'; else $(CYGPATH_W) '$(srcdir)/src/DataBase.cpp'; fi`

workerdDummy-Informer.o: src/Informer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerdDummy-Informer.o -MD -MP -MF $(DEPDIR)/workerdDummy-Informer.Tpo -c -o workerdDummy-Informer.o `test -f 'src/Informer.cpp' || echo '$(srcdir)/'`src/Informer.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerdDummy-Informer.Tpo $(DEPDIR)/workerdDummy-Informer.Po
#	$(AM_V_CXX)source='src/Informer.cpp' object='workerdDummy-Informer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerdDummy-Informer.o `test -f 'src/Informer.cpp' || echo '$(srcdir)/'`src/Informer.cpp

workerdDummy-Informer.obj: src/Informer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerdDummy-Informer.obj -MD -MP -MF $(DEPDIR)/workerdDummy-Informer.Tpo -c -o workerdDummy-Informer.obj `if test -f 'src/Informer.cpp'; then $(CYGPATH_W) 'src/Informer.cpp'; else $(CYGPATH_W) '$(srcdir)/src/Informer.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerdDummy-Informer.Tpo $(DEPDIR)/workerdDummy-Informer.Po
#	$(AM_V_CXX)source='src/Informer.cpp' object='workerdDummy-Informer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerdDummy-Informer.obj `if test -f 'src/Informer.cpp'; then $(CYGPATH_W) 'src/Informer.cpp'; else $(CYGPATH_W) '$(srcdir)/src/Informer.cpp'; fi`

workerdDummy-main.o: src/main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerdDummy-main.o -MD -MP -MF $(DEPDIR)/workerdDummy-main.Tpo -c -o workerdDummy-main.o `test -f 'src/main.cpp' || echo '$(srcdir)/'`src/main.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerdDummy-main.Tpo $(DEPDIR)/workerdDummy-main.Po
#	$(AM_V_CXX)source='src/main.cpp' object='workerdDummy-main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerdDummy-main.o `test -f 'src/main.cpp' || echo '$(srcdir)/'`src/main.cpp

workerdDummy-main.obj: src/main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerdDummy-main.obj -MD -MP -MF $(DEPDIR)/workerdDummy-main.Tpo -c -o workerdDummy-main.obj `if test -f 'src/main.cpp'; then $(CYGPATH_W) 'src/main.cpp'; else $(CYGPATH_W) '$(srcdir)/src/main.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerdDummy-main.Tpo $(DEPDIR)/workerdDummy-main.Po
#	$(AM_V_CXX)source='src/main.cpp' object='workerdDummy-main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerdDummy-main.obj `if test -f 'src/main.cpp'; then $(CYGPATH_W) 'src/main.cpp'; else $(CYGPATH_W) '$(srcdir)/src/main.cpp'; fi`

workerdDummy-Server.o: src/Server.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerdDummy-Server.o -MD -MP -MF $(DEPDIR)/workerdDummy-Server.Tpo -c -o workerdDummy-Server.o `test -f 'src/Server.cpp' || echo '$(srcdir)/'`src/Server.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerdDummy-Server.Tpo $(DEPDIR)/workerdDummy-Server.Po
#	$(AM_V_CXX)source='src/Server.cpp' object='workerdDummy-Server.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerdDummy-Server.o `test -f 'src/Server.cpp' || echo '$(srcdir)/'`src/Server.cpp

workerdDummy-Server.obj: src/Server.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerdDummy-Server.obj -MD -MP -MF $(DEPDIR)/workerdDummy-Server.Tpo -c -o workerdDummy-Server.obj `if test -f 'src/Server.cpp'; then $(CYGPATH_W) 'src/Server.cpp'; else $(CYGPATH_W) '$(srcdir)/src/Server.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerdDummy-Server.Tpo $(DEPDIR)/workerdDummy-Server.Po
#	$(AM_V_CXX)source='src/Server.cpp' object='workerdDummy-Server.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerdDummy-Server.obj `if test -f 'src/Server.cpp'; then $(CYGPATH_W) 'src/Server.cpp'; else $(CYGPATH_W) '$(srcdir)/src/Server.cpp'; fi`

workerdDummy-Campaign.o: src/Campaign.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerdDummy-Campaign.o -MD -MP -MF $(DEPDIR)/workerdDummy-Campaign.Tpo -c -o workerdDummy-Campaign.o `test -f 'src/Campaign.cpp' || echo '$(srcdir)/'`src/Campaign.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerdDummy-Campaign.Tpo $(DEPDIR)/workerdDummy-Campaign.Po
#	$(AM_V_CXX)source='src/Campaign.cpp' object='workerdDummy-Campaign.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerdDummy-Campaign.o `test -f 'src/Campaign.cpp' || echo '$(srcdir)/'`src/Campaign.cpp

workerdDummy-Campaign.obj: src/Campaign.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerdDummy-Campaign.obj -MD -MP -MF $(DEPDIR)/workerdDummy-Campaign.Tpo -c -o workerdDummy-Campaign.obj `if test -f 'src/Campaign.cpp'; then $(CYGPATH_W) 'src/Campaign.cpp'; else $(CYGPATH_W) '$(srcdir)/src/Campaign.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerdDummy-Campaign.Tpo $(DEPDIR)/workerdDummy-Campaign.Po
#	$(AM_V_CXX)source='src/Campaign.cpp' object='workerdDummy-Campaign.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerdDummy-Campaign.obj `if test -f 'src/Campaign.cpp'; then $(CYGPATH_W) 'src/Campaign.cpp'; else $(CYGPATH_W) '$(srcdir)/src/Campaign.cpp'; fi`

workerdDummy-DB.o: src/DB.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerdDummy-DB.o -MD -MP -MF $(DEPDIR)/workerdDummy-DB.Tpo -c -o workerdDummy-DB.o `test -f 'src/DB.cpp' || echo '$(srcdir)/'`src/DB.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerdDummy-DB.Tpo $(DEPDIR)/workerdDummy-DB.Po
#	$(AM_V_CXX)source='src/DB.cpp' object='workerdDummy-DB.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerdDummy-DB.o `test -f 'src/DB.cpp' || echo '$(srcdir)/'`src/DB.cpp

workerdDummy-DB.obj: src/DB.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerdDummy-DB.obj -MD -MP -MF $(DEPDIR)/workerdDummy-DB.Tpo -c -o workerdDummy-DB.obj `if test -f 'src/DB.cpp'; then $(CYGPATH_W) 'src/DB.cpp'; else $(CYGPATH_W) '$(srcdir)/src/DB.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerdDummy-DB.Tpo $(DEPDIR)/workerdDummy-DB.Po
#	$(AM_V_CXX)source='src/DB.cpp' object='workerdDummy-DB.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerdDummy-DB.obj `if test -f 'src/DB.cpp'; then $(CYGPATH_W) 'src/DB.cpp'; else $(CYGPATH_W) '$(srcdir)/src/DB.cpp'; fi`

workerdDummy-Offer.o: src/Offer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerdDummy-Offer.o -MD -MP -MF $(DEPDIR)/workerdDummy-Offer.Tpo -c -o workerdDummy-Offer.o `test -f 'src/Offer.cpp' || echo '$(srcdir)/'`src/Offer.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerdDummy-Offer.Tpo $(DEPDIR)/workerdDummy-Offer.Po
#	$(AM_V_CXX)source='src/Offer.cpp' object='workerdDummy-Offer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerdDummy-Offer.o `test -f 'src/Offer.cpp' || echo '$(srcdir)/'`src/Offer.cpp

workerdDummy-Offer.obj: src/Offer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerdDummy-Offer.obj -MD -MP -MF $(DEPDIR)/workerdDummy-Offer.Tpo -c -o workerdDummy-Offer.obj `if test -f 'src/Offer.cpp'; then $(CYGPATH_W) 'src/Offer.cpp'; else $(CYGPATH_W) '$(srcdir)/src/Offer.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerdDummy-Offer.Tpo $(DEPDIR)/workerdDummy-Offer.Po
#	$(AM_V_CXX)source='src/Offer.cpp' object='workerdDummy-Offer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerdDummy-Offer.obj `if test -f 'src/Offer.cpp'; then $(CYGPATH_W) 'src/Offer.cpp'; else $(CYGPATH_W) '$(srcdir)/src/Offer.cpp'; fi`

workerdDummy-CgiService.o: src/CgiService.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerdDummy-CgiService.o -MD -MP -MF $(DEPDIR)/workerdDummy-CgiService.Tpo -c -o workerdDummy-CgiService.o `test -f 'src/CgiService.cpp' || echo '$(srcdir)/'`src/CgiService.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerdDummy-CgiService.Tpo $(DEPDIR)/workerdDummy-CgiService.Po
#	$(AM_V_CXX)source='src/CgiService.cpp' object='workerdDummy-CgiService.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerdDummy-CgiService.o `test -f 'src/CgiService.cpp' || echo '$(srcdir)/'`src/CgiService.cpp

workerdDummy-CgiService.obj: src/CgiService.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerdDummy-CgiService.obj -MD -MP -MF $(DEPDIR)/workerdDummy-CgiService.Tpo -c -o workerdDummy-CgiService.obj `if test -f 'src/CgiService.cpp'; then $(CYGPATH_W) 'src/CgiService.cpp'; else $(CYGPATH_W) '$(srcdir)/src/CgiService.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerdDummy-CgiService.Tpo $(DEPDIR)/workerdDummy-CgiService.Po
#	$(AM_V_CXX)source='src/CgiService.cpp' object='workerdDummy-CgiService.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerdDummy-CgiService.obj `if test -f 'src/CgiService.cpp'; then $(CYGPATH_W) 'src/CgiService.cpp'; else $(CYGPATH_W) '$(srcdir)/src/CgiService.cpp'; fi`

workerdDummy-EBranch.o: src/EBranch.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerdDummy-EBranch.o -MD -MP -MF $(DEPDIR)/workerdDummy-EBranch.Tpo -c -o workerdDummy-EBranch.o `test -f 'src/EBranch.cpp' || echo '$(srcdir)/'`src/EBranch.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerdDummy-EBranch.Tpo $(DEPDIR)/workerdDummy-EBranch.Po
#	$(AM_V_CXX)source='src/EBranch.cpp' object='workerdDummy-EBranch.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerdDummy-EBranch.o `test -f 'src/EBranch.cpp' || echo '$(srcdir)/'`src/EBranch.cpp

workerdDummy-EBranch.obj: src/EBranch.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerdDummy-EBranch.obj -MD -MP -MF $(DEPDIR)/workerdDummy-EBranch.Tpo -c -o workerdDummy-EBranch.obj `if test -f 'src/EBranch.cpp'; then $(CYGPATH_W) 'src/EBranch.cpp'; else $(CYGPATH_W) '$(srcdir)/src/EBranch.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerdDummy-EBranch.Tpo $(DEPDIR)/workerdDummy-EBranch.Po
#	$(AM_V_CXX)source='src/EBranch.cpp' object='workerdDummy-EBranch.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerdDummy-EBranch.obj `if test -f 'src/EBranch.cpp'; then $(CYGPATH_W) 'src/EBranch.cpp'; else $(CYGPATH_W) '$(srcdir)/src/EBranch.cpp'; fi`

workerdDummy-json.o: src/json.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerdDummy-json.o -MD -MP -MF $(DEPDIR)/workerdDummy-json.Tpo -c -o workerdDummy-json.o `test -f 'src/json.cpp' || echo '$(srcdir)/'`src/json.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerdDummy-json.Tpo $(DEPDIR)/workerdDummy-json.Po
#	$(AM_V_CXX)source='src/json.cpp' object='workerdDummy-json.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerdDummy-json.o `test -f 'src/json.cpp' || echo '$(srcdir)/'`src/json.cpp

workerdDummy-json.obj: src/json.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerdDummy-json.obj -MD -MP -MF $(DEPDIR)/workerdDummy-json.Tpo -c -o workerdDummy-json.obj `if test -f 'src/json.cpp'; then $(CYGPATH_W) 'src/json.cpp'; else $(CYGPATH_W) '$(srcdir)/src/json.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerdDummy-json.Tpo $(DEPDIR)/workerdDummy-json.Po
#	$(AM_V_CXX)source='src/json.cpp' object='workerdDummy-json.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerdDummy-json.obj `if test -f 'src/json.cpp'; then $(CYGPATH_W) 'src/json.cpp'; else $(CYGPATH_W) '$(srcdir)/src/json.cpp'; fi`

workerdDummy-ParamParse.o: src/ParamParse.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerdDummy-ParamParse.o -MD -MP -MF $(DEPDIR)/workerdDummy-ParamParse.Tpo -c -o workerdDummy-ParamParse.o `test -f 'src/ParamParse.cpp' || echo '$(srcdir)/'`src/ParamParse.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerdDummy-ParamParse.Tpo $(DEPDIR)/workerdDummy-ParamParse.Po
#	$(AM_V_CXX)source='src/ParamParse.cpp' object='workerdDummy-ParamParse.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerdDummy-ParamParse.o `test -f 'src/ParamParse.cpp' || echo '$(srcdir)/'`src/ParamParse.cpp

workerdDummy-ParamParse.obj: src/ParamParse.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerdDummy-ParamParse.obj -MD -MP -MF $(DEPDIR)/workerdDummy-ParamParse.Tpo -c -o workerdDummy-ParamParse.obj `if test -f 'src/ParamParse.cpp'; then $(CYGPATH_W) 'src/ParamParse.cpp'; else $(CYGPATH_W) '$(srcdir)/src/ParamParse.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerdDummy-ParamParse.Tpo $(DEPDIR)/workerdDummy-ParamParse.Po
#	$(AM_V_CXX)source='src/ParamParse.cpp' object='workerdDummy-ParamParse.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerdDummy-ParamParse.obj `if test -f 'src/ParamParse.cpp'; then $(CYGPATH_W) 'src/ParamParse.cpp'; else $(CYGPATH_W) '$(srcdir)/src/ParamParse.cpp'; fi`

workerdDummy-UrlParser.o: src/UrlParser.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerdDummy-UrlParser.o -MD -MP -MF $(DEPDIR)/workerdDummy-UrlParser.Tpo -c -o workerdDummy-UrlParser.o `test -f 'src/UrlParser.cpp' || echo '$(srcdir)/'`src/UrlParser.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerdDummy-UrlParser.Tpo $(DEPDIR)/workerdDummy-UrlParser.Po
#	$(AM_V_CXX)source='src/UrlParser.cpp' object='workerdDummy-UrlParser.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerdDummy-UrlParser.o `test -f 'src/UrlParser.cpp' || echo '$(srcdir)/'`src/UrlParser.cpp

workerdDummy-UrlParser.obj: src/UrlParser.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerdDummy-UrlParser.obj -MD -MP -MF $(DEPDIR)/workerdDummy-UrlParser.Tpo -c -o workerdDummy-UrlParser.obj `if test -f 'src/UrlParser.cpp'; then $(CYGPATH_W) 'src/UrlParser.cpp'; else $(CYGPATH_W) '$(srcdir)/src/UrlParser.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerdDummy-UrlParser.Tpo $(DEPDIR)/workerdDummy-UrlParser.Po
#	$(AM_V_CXX)source='src/UrlParser.cpp' object='workerdDummy-UrlParser.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerdDummy-UrlParser.obj `if test -f 'src/UrlParser.cpp'; then $(CYGPATH_W) 'src/UrlParser.cpp'; else $(CYGPATH_W) '$(srcdir)/src/UrlParser.cpp'; fi`

workerdDummy-Config.o: src/Config.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerdDummy-Config.o -MD -MP -MF $(DEPDIR)/workerdDummy-Config.Tpo -c -o workerdDummy-Config.o `test -f 'src/Config.cpp' || echo '$(srcdir)/'`src/Config.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerdDummy-Config.Tpo $(DEPDIR)/workerdDummy-Config.Po
#	$(AM_V_CXX)source='src/Config.cpp' object='workerdDummy-Config.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerdDummy-Config.o `test -f 'src/Config.cpp' || echo '$(srcdir)/'`src/Config.cpp

workerdDummy-Config.obj: src/Config.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerdDummy-Config.obj -MD -MP -MF $(DEPDIR)/workerdDummy-Config.Tpo -c -o workerdDummy-Config.obj `if test -f 'src/Config.cpp'; then $(CYGPATH_W) 'src/Config.cpp'; else $(CYGPATH_W) '$(srcdir)/src/Config.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerdDummy-Config.Tpo $(DEPDIR)/workerdDummy-Config.Po
#	$(AM_V_CXX)source='src/Config.cpp' object='workerdDummy-Config.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerdDummy-Config.obj `if test -f 'src/Config.cpp'; then $(CYGPATH_W) 'src/Config.cpp'; else $(CYGPATH_W) '$(srcdir)/src/Config.cpp'; fi`

workerdDummy-KompexSQLiteDatabase.o: src/KompexSQLiteDatabase.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerdDummy-KompexSQLiteDatabase.o -MD -MP -MF $(DEPDIR)/workerdDummy-KompexSQLiteDatabase.Tpo -c -o workerdDummy-KompexSQLiteDatabase.o `test -f 'src/KompexSQLiteDatabase.cpp' || echo '$(srcdir)/'`src/KompexSQLiteDatabase.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerdDummy-KompexSQLiteDatabase.Tpo $(DEPDIR)/workerdDummy-KompexSQLiteDatabase.Po
#	$(AM_V_CXX)source='src/KompexSQLiteDatabase.cpp' object='workerdDummy-KompexSQLiteDatabase.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerdDummy-KompexSQLiteDatabase.o `test -f 'src/KompexSQLiteDatabase.cpp' || echo '$(srcdir)/'`src/KompexSQLiteDatabase.cpp

workerdDummy-KompexSQLiteDatabase.obj: src/KompexSQLiteDatabase.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerdDummy-KompexSQLiteDatabase.obj -MD -MP -MF $(DEPDIR)/workerdDummy-KompexSQLiteDatabase.Tpo -c -o workerdDummy-KompexSQLiteDatabase.obj `if test -f 'src/KompexSQLiteDatabase.cpp'; then $(CYGPATH_W) 'src/KompexSQLiteDatabase.cpp'; else $(CYGPATH_W) '$(srcdir)/src/KompexSQLiteDatabase.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerdDummy-KompexSQLiteDatabase.Tpo $(DEPDIR)/workerdDummy-KompexSQLiteDatabase.Po
#	$(AM_V_CXX)source='src/KompexSQLiteDatabase.cpp' object='workerdDummy-KompexSQLiteDatabase.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerdDummy-KompexSQLiteDatabase.obj `if test -f 'src/KompexSQLiteDatabase.cpp'; then $(CYGPATH_W) 'src/KompexSQLiteDatabase.cpp'; else $(CYGPATH_W) '$(srcdir)/src/KompexSQLiteDatabase.cpp'; fi`

workerdDummy-Params.o: src/Params.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerdDummy-Params.o -MD -MP -MF $(DEPDIR)/workerdDummy-Params.Tpo -c -o workerdDummy-Params.o `test -f 'src/Params.cpp' || echo '$(srcdir)/'`src/Params.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerdDummy-Params.Tpo $(DEPDIR)/workerdDummy-Params.Po
#	$(AM_V_CXX)source='src/Params.cpp' object='workerdDummy-Params.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerdDummy-Params.o `test -f 'src/Params.cpp' || echo '$(srcdir)/'`src/Params.cpp

workerdDummy-Params.obj: src/Params.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerdDummy-Params.obj -MD -MP -MF $(DEPDIR)/workerdDummy-Params.Tpo -c -o workerdDummy-Params.obj `if test -f 'src/Params.cpp'; then $(CYGPATH_W) 'src/Params.cpp'; else $(CYGPATH_W) '$(srcdir)/src/Params.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerdDummy-Params.Tpo $(DEPDIR)/workerdDummy-Params.Po
#	$(AM_V_CXX)source='src/Params.cpp' object='workerdDummy-Params.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerdDummy-Params.obj `if test -f 'src/Params.cpp'; then $(CYGPATH_W) 'src/Params.cpp'; else $(CYGPATH_W) '$(srcdir)/src/Params.cpp'; fi`

workerdDummy-Cookie.o: src/Cookie.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerdDummy-Cookie.o -MD -MP -MF $(DEPDIR)/workerdDummy-Cookie.Tpo -c -o workerdDummy-Cookie.o `test -f 'src/Cookie.cpp' || echo '$(srcdir)/'`src/Cookie.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerdDummy-Cookie.Tpo $(DEPDIR)/workerdDummy-Cookie.Po
#	$(AM_V_CXX)source='src/Cookie.cpp' object='workerdDummy-Cookie.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerdDummy-Cookie.o `test -f 'src/Cookie.cpp' || echo '$(srcdir)/'`src/Cookie.cpp

workerdDummy-Cookie.obj: src/Cookie.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerdDummy-Cookie.obj -MD -MP -MF $(DEPDIR)/workerdDummy-Cookie.Tpo -c -o workerdDummy-Cookie.obj `if test -f 'src/Cookie.cpp'; then $(CYGPATH_W) 'src/Cookie.cpp'; else $(CYGPATH_W) '$(srcdir)/src/Cookie.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerdDummy-Cookie.Tpo $(DEPDIR)/workerdDummy-Cookie.Po
#	$(AM_V_CXX)source='src/Cookie.cpp' object='workerdDummy-Cookie.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerdDummy-Cookie.obj `if test -f 'src/Cookie.cpp'; then $(CYGPATH_W) 'src/Cookie.cpp'; else $(CYGPATH_W) '$(srcdir)/src/Cookie.cpp'; fi`

workerdDummy-GeoIPTools.o: src/GeoIPTools.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerdDummy-GeoIPTools.o -MD -MP -MF $(DEPDIR)/workerdDummy-GeoIPTools.Tpo -c -o workerdDummy-GeoIPTools.o `test -f 'src/GeoIPTools.cpp' || echo '$(srcdir)/'`src/GeoIPTools.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerdDummy-GeoIPTools.Tpo $(DEPDIR)/workerdDummy-GeoIPTools.Po
#	$(AM_V_CXX)source='src/GeoIPTools.cpp' object='workerdDummy-GeoIPTools.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerdDummy-GeoIPTools.o `test -f 'src/GeoIPTools.cpp' || echo '$(srcdir)/'`src/GeoIPTools.cpp

workerdDummy-GeoIPTools.obj: src/GeoIPTools.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerdDummy-GeoIPTools.obj -MD -MP -MF $(DEPDIR)/workerdDummy-GeoIPTools.Tpo -c -o workerdDummy-GeoIPTools.obj `if test -f 'src/GeoIPTools.cpp'; then $(CYGPATH_W) 'src/GeoIPTools.cpp'; else $(CYGPATH_W) '$(srcdir)/src/GeoIPTools.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerdDummy-GeoIPTools.Tpo $(DEPDIR)/workerdDummy-GeoIPTools.Po
#	$(AM_V_CXX)source='src/GeoIPTools.cpp' object='workerdDummy-GeoIPTools.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerdDummy-GeoIPTools.obj `if test -f 'src/GeoIPTools.cpp'; then $(CYGPATH_W) 'src/GeoIPTools.cpp'; else $(CYGPATH_W) '$(srcdir)/src/GeoIPTools.cpp'; fi`

workerdDummy-KompexSQLiteStatement.o: src/KompexSQLiteStatement.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerdDummy-KompexSQLiteStatement.o -MD -MP -MF $(DEPDIR)/workerdDummy-KompexSQLiteStatement.Tpo -c -o workerdDummy-KompexSQLiteStatement.o `test -f 'src/KompexSQLiteStatement.cpp' || echo '$(srcdir)/'`src/KompexSQLiteStatement.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerdDummy-KompexSQLiteStatement.Tpo $(DEPDIR)/workerdDummy-KompexSQLiteStatement.Po
#	$(AM_V_CXX)source='src/KompexSQLiteStatement.cpp' object='workerdDummy-KompexSQLiteStatement.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerdDummy-KompexSQLiteStatement.o `test -f 'src/KompexSQLiteStatement.cpp' || echo '$(srcdir)/'`src/KompexSQLiteStatement.cpp

workerdDummy-KompexSQLiteStatement.obj: src/KompexSQLiteStatement.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerdDummy-KompexSQLiteStatement.obj -MD -MP -MF $(DEPDIR)/workerdDummy-KompexSQLiteStatement.Tpo -c -o workerdDummy-KompexSQLiteStatement.obj `if test -f 'src/KompexSQLiteStatement.cpp'; then $(CYGPATH_W) 'src/KompexSQLiteStatement.cpp'; else $(CYGPATH_W) '$(srcdir)/src/KompexSQLiteStatement.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerdDummy-KompexSQLiteStatement.Tpo $(DEPDIR)/workerdDummy-KompexSQLiteStatement.Po
#	$(AM_V_CXX)source='src/KompexSQLiteStatement.cpp' object='workerdDummy-KompexSQLiteStatement.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerdDummy-KompexSQLiteStatement.obj `if test -f 'src/KompexSQLiteStatement.cpp'; then $(CYGPATH_W) 'src/KompexSQLiteStatement.cpp'; else $(CYGPATH_W) '$(srcdir)/src/KompexSQLiteStatement.cpp'; fi`

workerdDummy-ParentDB.o: src/ParentDB.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerdDummy-ParentDB.o -MD -MP -MF $(DEPDIR)/workerdDummy-ParentDB.Tpo -c -o workerdDummy-ParentDB.o `test -f 'src/ParentDB.cpp' || echo '$(srcdir)/'`src/ParentDB.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerdDummy-ParentDB.Tpo $(DEPDIR)/workerdDummy-ParentDB.Po
#	$(AM_V_CXX)source='src/ParentDB.cpp' object='workerdDummy-ParentDB.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerdDummy-ParentDB.o `test -f 'src/ParentDB.cpp' || echo '$(srcdir)/'`src/ParentDB.cpp

workerdDummy-ParentDB.obj: src/ParentDB.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT workerdDummy-ParentDB.obj -MD -MP -MF $(DEPDIR)/workerdDummy-ParentDB.Tpo -c -o workerdDummy-ParentDB.obj `if test -f 'src/ParentDB.cpp'; then $(CYGPATH_W) 'src/ParentDB.cpp'; else $(CYGPATH_W) '$(srcdir)/src/ParentDB.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/workerdDummy-ParentDB.Tpo $(DEPDIR)/workerdDummy-ParentDB.Po
#	$(AM_V_CXX)source='src/ParentDB.cpp' object='workerdDummy-ParentDB.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(workerdDummy_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o workerdDummy-ParentDB.obj `if test -f 'src/ParentDB.cpp'; then $(CYGPATH_W) 'src/ParentDB.cpp'; else $(CYGPATH_W) '$(srcdir)/src/ParentDB.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool config.lt
install-dist_docDATA: $(dist_doc_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_doc_DATA)'; test -n "$(docdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(docdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(docdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(docdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(docdir)" || exit $$?; \
	done

uninstall-dist_docDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_doc_DATA)'; test -n "$(docdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(docdir)'; $(am__uninstall_files_from_dir)
install-sysconfDATA: $(sysconf_DATA)
	@$(NORMAL_INSTALL)
	@list='$(sysconf_DATA)'; test -n "$(sysconfdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(sysconfdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(sysconfdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(sysconfdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(sysconfdir)" || exit $$?; \
	done

uninstall-sysconfDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(sysconf_DATA)'; test -n "$(sysconfdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(sysconfdir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscope: cscope.files
	test ! -s cscope.files \
	  || $(CSCOPE) -b -q $(AM_CSCOPEFLAGS) $(CSCOPEFLAGS) -i cscope.files $(CSCOPE_ARGS)
clean-cscope:
	-rm -f cscope.files
cscope.files: clean-cscope cscopelist
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
	-rm -f cscope.out cscope.in.out cscope.po.out cscope.files

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__post_remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2
	$(am__post_remove_distdir)

dist-lzip: distdir
	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz
	$(am__post_remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz
	$(am__post_remove_distdir)

dist-tarZ: distdir
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__post_remove_distdir)

dist-shar: distdir
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__post_remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__post_remove_distdir)

dist dist-all:
	$(MAKE) $(AM_MAKEFLAGS) $(DIST_TARGETS) am__post_remove_distdir='@:'
	$(am__post_remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lz*) \
	  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir)
	chmod u+w $(distdir)
	mkdir $(distdir)/_build $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__post_remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@test -n '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: trying to run $@ with an empty' \
	       '$$(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	$(am__cd) '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	test `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
check: check-recursive
all-am: Makefile $(PROGRAMS) $(DATA) config.h
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(docdir)" "$(DESTDIR)$(sysconfdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-libtool distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-dist_docDATA

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binPROGRAMS install-sysconfDATA

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-dist_docDATA \
	uninstall-sysconfDATA

.MAKE: $(am__recursive_targets) all install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am \
	am--refresh check check-am clean clean-binPROGRAMS \
	clean-cscope clean-generic clean-libtool cscope cscopelist-am \
	ctags ctags-am dist dist-all dist-bzip2 dist-gzip dist-lzip \
	dist-shar dist-tarZ dist-xz dist-zip distcheck distclean \
	distclean-compile distclean-generic distclean-hdr \
	distclean-libtool distclean-tags distcleancheck distdir \
	distuninstallcheck dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dist_docDATA install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip install-sysconfDATA installcheck installcheck-am \
	installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-dist_docDATA uninstall-sysconfDATA


install: install-binPROGRAMS
	$(call install_f,$(prefix))

deb: $(bin_PROGRAMS)
	rm -rf $(debian_BUILD)
	$(MKDIR_P) $(debian_BUILD)/DEBIAN
	cp install/control $(debian_BUILD)/DEBIAN
	$(call install_f,$(debian_BUILD))
	for p in `find $(debian_BUILD) -type f -print | grep -v DEBIAN`; do \
	md5sum $$p | $(SED) 's/$(debian_BUILD)\///'>>$(debian_BUILD)/DEBIAN/md5sum; \
	done
	dpkg-deb --build $(debian_BUILD)
	rm -rf $(debian_BUILD)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
